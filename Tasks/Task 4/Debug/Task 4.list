
Task 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005b0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000744  08000744  00020034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000744  08000744  00020034  2**0
                  CONTENTS
  4 .ARM          00000000  08000744  08000744  00020034  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000744  08000744  00020034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000744  08000744  00010744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000748  08000748  00010748  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000034  20000000  0800074c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000034  08000780  00020034  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000054  08000780  00020054  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a11  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000036c  00000000  00000000  00020a75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00020de8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00020eb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de0f  00000000  00000000  00020f40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010dd  00000000  00000000  0002ed4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fcb6  00000000  00000000  0002fe2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007fae2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001f4  00000000  00000000  0007fb38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000034 	.word	0x20000034
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800072c 	.word	0x0800072c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000038 	.word	0x20000038
 80001d0:	0800072c 	.word	0x0800072c

080001d4 <GPIO_EnableClock>:
#include "GPIO.h"

unsigned int *GPIO_RegisterTable[2][5] = {{GPIOAMODER, GPIOAOTYPER, GPIOAPUPDR, GPIOAIDR, GPIOAODR}, {GPIOBMODER, GPIOBOTYPER, GPIOBPUPDR, GPIOBIDR, GPIOBODR}};

void GPIO_EnableClock(unsigned char PortId)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
  RCC_AHB1ENR |= (0x01 << PortId);
 80001de:	4b08      	ldr	r3, [pc, #32]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	4611      	mov	r1, r2
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001ee:	430b      	orrs	r3, r1
 80001f0:	6013      	str	r3, [r2, #0]
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	40023830 	.word	0x40023830

08000204 <GPIO_Init>:

void GPIO_Init(unsigned char PortId, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState)
{
 8000204:	b490      	push	{r4, r7}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	4604      	mov	r4, r0
 800020c:	4608      	mov	r0, r1
 800020e:	4611      	mov	r1, r2
 8000210:	461a      	mov	r2, r3
 8000212:	4623      	mov	r3, r4
 8000214:	71fb      	strb	r3, [r7, #7]
 8000216:	4603      	mov	r3, r0
 8000218:	71bb      	strb	r3, [r7, #6]
 800021a:	460b      	mov	r3, r1
 800021c:	717b      	strb	r3, [r7, #5]
 800021e:	4613      	mov	r3, r2
 8000220:	713b      	strb	r3, [r7, #4]
  *GPIO_RegisterTable[PortId][0] &= ~(0x03 << 2 * PinNum);
 8000222:	79fa      	ldrb	r2, [r7, #7]
 8000224:	4956      	ldr	r1, [pc, #344]	; (8000380 <GPIO_Init+0x17c>)
 8000226:	4613      	mov	r3, r2
 8000228:	009b      	lsls	r3, r3, #2
 800022a:	4413      	add	r3, r2
 800022c:	009b      	lsls	r3, r3, #2
 800022e:	440b      	add	r3, r1
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	6819      	ldr	r1, [r3, #0]
 8000234:	79bb      	ldrb	r3, [r7, #6]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	2203      	movs	r2, #3
 800023a:	fa02 f303 	lsl.w	r3, r2, r3
 800023e:	43db      	mvns	r3, r3
 8000240:	461c      	mov	r4, r3
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	484e      	ldr	r0, [pc, #312]	; (8000380 <GPIO_Init+0x17c>)
 8000246:	4613      	mov	r3, r2
 8000248:	009b      	lsls	r3, r3, #2
 800024a:	4413      	add	r3, r2
 800024c:	009b      	lsls	r3, r3, #2
 800024e:	4403      	add	r3, r0
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	ea01 0204 	and.w	r2, r1, r4
 8000256:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][0] |= PinMode << 2 * PinNum;
 8000258:	79fa      	ldrb	r2, [r7, #7]
 800025a:	4949      	ldr	r1, [pc, #292]	; (8000380 <GPIO_Init+0x17c>)
 800025c:	4613      	mov	r3, r2
 800025e:	009b      	lsls	r3, r3, #2
 8000260:	4413      	add	r3, r2
 8000262:	009b      	lsls	r3, r3, #2
 8000264:	440b      	add	r3, r1
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	6819      	ldr	r1, [r3, #0]
 800026a:	797a      	ldrb	r2, [r7, #5]
 800026c:	79bb      	ldrb	r3, [r7, #6]
 800026e:	005b      	lsls	r3, r3, #1
 8000270:	fa02 f303 	lsl.w	r3, r2, r3
 8000274:	461c      	mov	r4, r3
 8000276:	79fa      	ldrb	r2, [r7, #7]
 8000278:	4841      	ldr	r0, [pc, #260]	; (8000380 <GPIO_Init+0x17c>)
 800027a:	4613      	mov	r3, r2
 800027c:	009b      	lsls	r3, r3, #2
 800027e:	4413      	add	r3, r2
 8000280:	009b      	lsls	r3, r3, #2
 8000282:	4403      	add	r3, r0
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	ea41 0204 	orr.w	r2, r1, r4
 800028a:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][1] &= ~(1 << PinNum);
 800028c:	79fa      	ldrb	r2, [r7, #7]
 800028e:	493c      	ldr	r1, [pc, #240]	; (8000380 <GPIO_Init+0x17c>)
 8000290:	4613      	mov	r3, r2
 8000292:	009b      	lsls	r3, r3, #2
 8000294:	4413      	add	r3, r2
 8000296:	009b      	lsls	r3, r3, #2
 8000298:	440b      	add	r3, r1
 800029a:	3304      	adds	r3, #4
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	6819      	ldr	r1, [r3, #0]
 80002a0:	79bb      	ldrb	r3, [r7, #6]
 80002a2:	2201      	movs	r2, #1
 80002a4:	fa02 f303 	lsl.w	r3, r2, r3
 80002a8:	43db      	mvns	r3, r3
 80002aa:	461c      	mov	r4, r3
 80002ac:	79fa      	ldrb	r2, [r7, #7]
 80002ae:	4834      	ldr	r0, [pc, #208]	; (8000380 <GPIO_Init+0x17c>)
 80002b0:	4613      	mov	r3, r2
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	4413      	add	r3, r2
 80002b6:	009b      	lsls	r3, r3, #2
 80002b8:	4403      	add	r3, r0
 80002ba:	3304      	adds	r3, #4
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	ea01 0204 	and.w	r2, r1, r4
 80002c2:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 80002c4:	79fa      	ldrb	r2, [r7, #7]
 80002c6:	492e      	ldr	r1, [pc, #184]	; (8000380 <GPIO_Init+0x17c>)
 80002c8:	4613      	mov	r3, r2
 80002ca:	009b      	lsls	r3, r3, #2
 80002cc:	4413      	add	r3, r2
 80002ce:	009b      	lsls	r3, r3, #2
 80002d0:	440b      	add	r3, r1
 80002d2:	3304      	adds	r3, #4
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	6819      	ldr	r1, [r3, #0]
 80002d8:	793b      	ldrb	r3, [r7, #4]
 80002da:	f003 0201 	and.w	r2, r3, #1
 80002de:	79bb      	ldrb	r3, [r7, #6]
 80002e0:	fa02 f303 	lsl.w	r3, r2, r3
 80002e4:	461c      	mov	r4, r3
 80002e6:	79fa      	ldrb	r2, [r7, #7]
 80002e8:	4825      	ldr	r0, [pc, #148]	; (8000380 <GPIO_Init+0x17c>)
 80002ea:	4613      	mov	r3, r2
 80002ec:	009b      	lsls	r3, r3, #2
 80002ee:	4413      	add	r3, r2
 80002f0:	009b      	lsls	r3, r3, #2
 80002f2:	4403      	add	r3, r0
 80002f4:	3304      	adds	r3, #4
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	ea41 0204 	orr.w	r2, r1, r4
 80002fc:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][2] &= ~(0x03 << 2 * PinNum);
 80002fe:	79fa      	ldrb	r2, [r7, #7]
 8000300:	491f      	ldr	r1, [pc, #124]	; (8000380 <GPIO_Init+0x17c>)
 8000302:	4613      	mov	r3, r2
 8000304:	009b      	lsls	r3, r3, #2
 8000306:	4413      	add	r3, r2
 8000308:	009b      	lsls	r3, r3, #2
 800030a:	440b      	add	r3, r1
 800030c:	3308      	adds	r3, #8
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	6819      	ldr	r1, [r3, #0]
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	005b      	lsls	r3, r3, #1
 8000316:	2203      	movs	r2, #3
 8000318:	fa02 f303 	lsl.w	r3, r2, r3
 800031c:	43db      	mvns	r3, r3
 800031e:	461c      	mov	r4, r3
 8000320:	79fa      	ldrb	r2, [r7, #7]
 8000322:	4817      	ldr	r0, [pc, #92]	; (8000380 <GPIO_Init+0x17c>)
 8000324:	4613      	mov	r3, r2
 8000326:	009b      	lsls	r3, r3, #2
 8000328:	4413      	add	r3, r2
 800032a:	009b      	lsls	r3, r3, #2
 800032c:	4403      	add	r3, r0
 800032e:	3308      	adds	r3, #8
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	ea01 0204 	and.w	r2, r1, r4
 8000336:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 8000338:	79fa      	ldrb	r2, [r7, #7]
 800033a:	4911      	ldr	r1, [pc, #68]	; (8000380 <GPIO_Init+0x17c>)
 800033c:	4613      	mov	r3, r2
 800033e:	009b      	lsls	r3, r3, #2
 8000340:	4413      	add	r3, r2
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	440b      	add	r3, r1
 8000346:	3308      	adds	r3, #8
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	6819      	ldr	r1, [r3, #0]
 800034c:	793b      	ldrb	r3, [r7, #4]
 800034e:	105b      	asrs	r3, r3, #1
 8000350:	f003 0203 	and.w	r2, r3, #3
 8000354:	79bb      	ldrb	r3, [r7, #6]
 8000356:	005b      	lsls	r3, r3, #1
 8000358:	fa02 f303 	lsl.w	r3, r2, r3
 800035c:	461c      	mov	r4, r3
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	4807      	ldr	r0, [pc, #28]	; (8000380 <GPIO_Init+0x17c>)
 8000362:	4613      	mov	r3, r2
 8000364:	009b      	lsls	r3, r3, #2
 8000366:	4413      	add	r3, r2
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	4403      	add	r3, r0
 800036c:	3308      	adds	r3, #8
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	ea41 0204 	orr.w	r2, r1, r4
 8000374:	601a      	str	r2, [r3, #0]
}
 8000376:	bf00      	nop
 8000378:	3708      	adds	r7, #8
 800037a:	46bd      	mov	sp, r7
 800037c:	bc90      	pop	{r4, r7}
 800037e:	4770      	bx	lr
 8000380:	20000000 	.word	0x20000000

08000384 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PortId, unsigned char PinNum,
                            unsigned char Data)
{
 8000384:	b490      	push	{r4, r7}
 8000386:	b084      	sub	sp, #16
 8000388:	af00      	add	r7, sp, #0
 800038a:	4603      	mov	r3, r0
 800038c:	71fb      	strb	r3, [r7, #7]
 800038e:	460b      	mov	r3, r1
 8000390:	71bb      	strb	r3, [r7, #6]
 8000392:	4613      	mov	r3, r2
 8000394:	717b      	strb	r3, [r7, #5]
  unsigned char result;
  if (((*GPIO_RegisterTable[PortId][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1)
 8000396:	79fa      	ldrb	r2, [r7, #7]
 8000398:	492c      	ldr	r1, [pc, #176]	; (800044c <GPIO_WritePin+0xc8>)
 800039a:	4613      	mov	r3, r2
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	4413      	add	r3, r2
 80003a0:	009b      	lsls	r3, r3, #2
 80003a2:	440b      	add	r3, r1
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	79ba      	ldrb	r2, [r7, #6]
 80003aa:	0052      	lsls	r2, r2, #1
 80003ac:	2103      	movs	r1, #3
 80003ae:	fa01 f202 	lsl.w	r2, r1, r2
 80003b2:	401a      	ands	r2, r3
 80003b4:	79bb      	ldrb	r3, [r7, #6]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa22 f303 	lsr.w	r3, r2, r3
 80003bc:	2b01      	cmp	r3, #1
 80003be:	d13d      	bne.n	800043c <GPIO_WritePin+0xb8>
  {
    if (Data)
 80003c0:	797b      	ldrb	r3, [r7, #5]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	d01b      	beq.n	80003fe <GPIO_WritePin+0x7a>
    {
      *GPIO_RegisterTable[PortId][4] |= (1 << PinNum);
 80003c6:	79fa      	ldrb	r2, [r7, #7]
 80003c8:	4920      	ldr	r1, [pc, #128]	; (800044c <GPIO_WritePin+0xc8>)
 80003ca:	4613      	mov	r3, r2
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	4413      	add	r3, r2
 80003d0:	009b      	lsls	r3, r3, #2
 80003d2:	440b      	add	r3, r1
 80003d4:	3310      	adds	r3, #16
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	6819      	ldr	r1, [r3, #0]
 80003da:	79bb      	ldrb	r3, [r7, #6]
 80003dc:	2201      	movs	r2, #1
 80003de:	fa02 f303 	lsl.w	r3, r2, r3
 80003e2:	461c      	mov	r4, r3
 80003e4:	79fa      	ldrb	r2, [r7, #7]
 80003e6:	4819      	ldr	r0, [pc, #100]	; (800044c <GPIO_WritePin+0xc8>)
 80003e8:	4613      	mov	r3, r2
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	4413      	add	r3, r2
 80003ee:	009b      	lsls	r3, r3, #2
 80003f0:	4403      	add	r3, r0
 80003f2:	3310      	adds	r3, #16
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	ea41 0204 	orr.w	r2, r1, r4
 80003fa:	601a      	str	r2, [r3, #0]
 80003fc:	e01b      	b.n	8000436 <GPIO_WritePin+0xb2>
    }
    else
    {
      *GPIO_RegisterTable[PortId][4] &= ~(1 << PinNum);
 80003fe:	79fa      	ldrb	r2, [r7, #7]
 8000400:	4912      	ldr	r1, [pc, #72]	; (800044c <GPIO_WritePin+0xc8>)
 8000402:	4613      	mov	r3, r2
 8000404:	009b      	lsls	r3, r3, #2
 8000406:	4413      	add	r3, r2
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	440b      	add	r3, r1
 800040c:	3310      	adds	r3, #16
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	6819      	ldr	r1, [r3, #0]
 8000412:	79bb      	ldrb	r3, [r7, #6]
 8000414:	2201      	movs	r2, #1
 8000416:	fa02 f303 	lsl.w	r3, r2, r3
 800041a:	43db      	mvns	r3, r3
 800041c:	461c      	mov	r4, r3
 800041e:	79fa      	ldrb	r2, [r7, #7]
 8000420:	480a      	ldr	r0, [pc, #40]	; (800044c <GPIO_WritePin+0xc8>)
 8000422:	4613      	mov	r3, r2
 8000424:	009b      	lsls	r3, r3, #2
 8000426:	4413      	add	r3, r2
 8000428:	009b      	lsls	r3, r3, #2
 800042a:	4403      	add	r3, r0
 800042c:	3310      	adds	r3, #16
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	ea01 0204 	and.w	r2, r1, r4
 8000434:	601a      	str	r2, [r3, #0]
    }
    result = OK;
 8000436:	2300      	movs	r3, #0
 8000438:	73fb      	strb	r3, [r7, #15]
 800043a:	e001      	b.n	8000440 <GPIO_WritePin+0xbc>
  }
  else
  {
    result = NOK;
 800043c:	2301      	movs	r3, #1
 800043e:	73fb      	strb	r3, [r7, #15]
  }
  return result;
 8000440:	7bfb      	ldrb	r3, [r7, #15]
}
 8000442:	4618      	mov	r0, r3
 8000444:	3710      	adds	r7, #16
 8000446:	46bd      	mov	sp, r7
 8000448:	bc90      	pop	{r4, r7}
 800044a:	4770      	bx	lr
 800044c:	20000000 	.word	0x20000000

08000450 <enableInterrupt>:

static unsigned char sevenSegHex[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66,
                                        0x6D, 0x7D, 0x07, 0x7F, 0x6F};
unsigned char counter = 0;

void enableInterrupt(){
 8000450:	b480      	push	{r7}
 8000452:	af00      	add	r7, sp, #0
	EXTI_IMR |= (0x03 << 0);
 8000454:	4b05      	ldr	r3, [pc, #20]	; (800046c <enableInterrupt+0x1c>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	4a04      	ldr	r2, [pc, #16]	; (800046c <enableInterrupt+0x1c>)
 800045a:	f043 0303 	orr.w	r3, r3, #3
 800045e:	6013      	str	r3, [r2, #0]
}
 8000460:	bf00      	nop
 8000462:	46bd      	mov	sp, r7
 8000464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000468:	4770      	bx	lr
 800046a:	bf00      	nop
 800046c:	40013c00 	.word	0x40013c00

08000470 <disableInterrupt>:

void disableInterrupt(){
 8000470:	b480      	push	{r7}
 8000472:	af00      	add	r7, sp, #0
	EXTI_IMR &= ~(0x03 << 0);
 8000474:	4b05      	ldr	r3, [pc, #20]	; (800048c <disableInterrupt+0x1c>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	4a04      	ldr	r2, [pc, #16]	; (800048c <disableInterrupt+0x1c>)
 800047a:	f023 0303 	bic.w	r3, r3, #3
 800047e:	6013      	str	r3, [r2, #0]
}
 8000480:	bf00      	nop
 8000482:	46bd      	mov	sp, r7
 8000484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000488:	4770      	bx	lr
 800048a:	bf00      	nop
 800048c:	40013c00 	.word	0x40013c00

08000490 <ISR_Increment>:

void ISR_Increment(void)
{
 8000490:	b580      	push	{r7, lr}
 8000492:	b082      	sub	sp, #8
 8000494:	af00      	add	r7, sp, #0
	disableInterrupt();
 8000496:	f7ff ffeb 	bl	8000470 <disableInterrupt>
    counter = (counter == 9) ? 9 : counter + 1;
 800049a:	4b1b      	ldr	r3, [pc, #108]	; (8000508 <ISR_Increment+0x78>)
 800049c:	781b      	ldrb	r3, [r3, #0]
 800049e:	2b09      	cmp	r3, #9
 80004a0:	d004      	beq.n	80004ac <ISR_Increment+0x1c>
 80004a2:	4b19      	ldr	r3, [pc, #100]	; (8000508 <ISR_Increment+0x78>)
 80004a4:	781b      	ldrb	r3, [r3, #0]
 80004a6:	3301      	adds	r3, #1
 80004a8:	b2db      	uxtb	r3, r3
 80004aa:	e000      	b.n	80004ae <ISR_Increment+0x1e>
 80004ac:	2309      	movs	r3, #9
 80004ae:	4a16      	ldr	r2, [pc, #88]	; (8000508 <ISR_Increment+0x78>)
 80004b0:	7013      	strb	r3, [r2, #0]
    enableInterrupt();
 80004b2:	f7ff ffcd 	bl	8000450 <enableInterrupt>

    for (unsigned char i = 0; i < 7; i++)
 80004b6:	2300      	movs	r3, #0
 80004b8:	71fb      	strb	r3, [r7, #7]
 80004ba:	e017      	b.n	80004ec <ISR_Increment+0x5c>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 80004bc:	4b12      	ldr	r3, [pc, #72]	; (8000508 <ISR_Increment+0x78>)
 80004be:	781b      	ldrb	r3, [r3, #0]
 80004c0:	461a      	mov	r2, r3
 80004c2:	4b12      	ldr	r3, [pc, #72]	; (800050c <ISR_Increment+0x7c>)
 80004c4:	5c9b      	ldrb	r3, [r3, r2]
 80004c6:	4619      	mov	r1, r3
 80004c8:	79fb      	ldrb	r3, [r7, #7]
 80004ca:	2201      	movs	r2, #1
 80004cc:	fa02 f303 	lsl.w	r3, r2, r3
 80004d0:	ea01 0203 	and.w	r2, r1, r3
 80004d4:	79fb      	ldrb	r3, [r7, #7]
 80004d6:	fa42 f303 	asr.w	r3, r2, r3
 80004da:	b2da      	uxtb	r2, r3
 80004dc:	79fb      	ldrb	r3, [r7, #7]
 80004de:	4619      	mov	r1, r3
 80004e0:	2001      	movs	r0, #1
 80004e2:	f7ff ff4f 	bl	8000384 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 80004e6:	79fb      	ldrb	r3, [r7, #7]
 80004e8:	3301      	adds	r3, #1
 80004ea:	71fb      	strb	r3, [r7, #7]
 80004ec:	79fb      	ldrb	r3, [r7, #7]
 80004ee:	2b06      	cmp	r3, #6
 80004f0:	d9e4      	bls.n	80004bc <ISR_Increment+0x2c>
    }

    EXTI_PR |= (0x01 << 0);
 80004f2:	4b07      	ldr	r3, [pc, #28]	; (8000510 <ISR_Increment+0x80>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	4a06      	ldr	r2, [pc, #24]	; (8000510 <ISR_Increment+0x80>)
 80004f8:	f043 0301 	orr.w	r3, r3, #1
 80004fc:	6013      	str	r3, [r2, #0]
}
 80004fe:	bf00      	nop
 8000500:	3708      	adds	r7, #8
 8000502:	46bd      	mov	sp, r7
 8000504:	bd80      	pop	{r7, pc}
 8000506:	bf00      	nop
 8000508:	20000050 	.word	0x20000050
 800050c:	20000028 	.word	0x20000028
 8000510:	40013c14 	.word	0x40013c14

08000514 <ISR_Decrement>:

void ISR_Decrement(void)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b082      	sub	sp, #8
 8000518:	af00      	add	r7, sp, #0
	disableInterrupt();
 800051a:	f7ff ffa9 	bl	8000470 <disableInterrupt>
    counter = (counter == 0) ? 0 : counter - 1;
 800051e:	4b1b      	ldr	r3, [pc, #108]	; (800058c <ISR_Decrement+0x78>)
 8000520:	781b      	ldrb	r3, [r3, #0]
 8000522:	2b00      	cmp	r3, #0
 8000524:	d004      	beq.n	8000530 <ISR_Decrement+0x1c>
 8000526:	4b19      	ldr	r3, [pc, #100]	; (800058c <ISR_Decrement+0x78>)
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	3b01      	subs	r3, #1
 800052c:	b2db      	uxtb	r3, r3
 800052e:	e000      	b.n	8000532 <ISR_Decrement+0x1e>
 8000530:	2300      	movs	r3, #0
 8000532:	4a16      	ldr	r2, [pc, #88]	; (800058c <ISR_Decrement+0x78>)
 8000534:	7013      	strb	r3, [r2, #0]
    enableInterrupt();
 8000536:	f7ff ff8b 	bl	8000450 <enableInterrupt>

    for (unsigned char i = 0; i < 7; i++)
 800053a:	2300      	movs	r3, #0
 800053c:	71fb      	strb	r3, [r7, #7]
 800053e:	e017      	b.n	8000570 <ISR_Decrement+0x5c>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 8000540:	4b12      	ldr	r3, [pc, #72]	; (800058c <ISR_Decrement+0x78>)
 8000542:	781b      	ldrb	r3, [r3, #0]
 8000544:	461a      	mov	r2, r3
 8000546:	4b12      	ldr	r3, [pc, #72]	; (8000590 <ISR_Decrement+0x7c>)
 8000548:	5c9b      	ldrb	r3, [r3, r2]
 800054a:	4619      	mov	r1, r3
 800054c:	79fb      	ldrb	r3, [r7, #7]
 800054e:	2201      	movs	r2, #1
 8000550:	fa02 f303 	lsl.w	r3, r2, r3
 8000554:	ea01 0203 	and.w	r2, r1, r3
 8000558:	79fb      	ldrb	r3, [r7, #7]
 800055a:	fa42 f303 	asr.w	r3, r2, r3
 800055e:	b2da      	uxtb	r2, r3
 8000560:	79fb      	ldrb	r3, [r7, #7]
 8000562:	4619      	mov	r1, r3
 8000564:	2001      	movs	r0, #1
 8000566:	f7ff ff0d 	bl	8000384 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 800056a:	79fb      	ldrb	r3, [r7, #7]
 800056c:	3301      	adds	r3, #1
 800056e:	71fb      	strb	r3, [r7, #7]
 8000570:	79fb      	ldrb	r3, [r7, #7]
 8000572:	2b06      	cmp	r3, #6
 8000574:	d9e4      	bls.n	8000540 <ISR_Decrement+0x2c>
    }

    EXTI_PR |= (0x02 << 0);
 8000576:	4b07      	ldr	r3, [pc, #28]	; (8000594 <ISR_Decrement+0x80>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a06      	ldr	r2, [pc, #24]	; (8000594 <ISR_Decrement+0x80>)
 800057c:	f043 0302 	orr.w	r3, r3, #2
 8000580:	6013      	str	r3, [r2, #0]
}
 8000582:	bf00      	nop
 8000584:	3708      	adds	r7, #8
 8000586:	46bd      	mov	sp, r7
 8000588:	bd80      	pop	{r7, pc}
 800058a:	bf00      	nop
 800058c:	20000050 	.word	0x20000050
 8000590:	20000028 	.word	0x20000028
 8000594:	40013c14 	.word	0x40013c14

08000598 <main>:

int main(void)
{
 8000598:	b580      	push	{r7, lr}
 800059a:	b082      	sub	sp, #8
 800059c:	af00      	add	r7, sp, #0

    GPIO_EnableClock(0);
 800059e:	2000      	movs	r0, #0
 80005a0:	f7ff fe18 	bl	80001d4 <GPIO_EnableClock>
    GPIO_EnableClock(1);
 80005a4:	2001      	movs	r0, #1
 80005a6:	f7ff fe15 	bl	80001d4 <GPIO_EnableClock>
    GPIO_Init(0, 0, INPUT, PULL_UP);
 80005aa:	2302      	movs	r3, #2
 80005ac:	2200      	movs	r2, #0
 80005ae:	2100      	movs	r1, #0
 80005b0:	2000      	movs	r0, #0
 80005b2:	f7ff fe27 	bl	8000204 <GPIO_Init>
    GPIO_Init(0, 1, INPUT, PULL_UP);
 80005b6:	2302      	movs	r3, #2
 80005b8:	2200      	movs	r2, #0
 80005ba:	2101      	movs	r1, #1
 80005bc:	2000      	movs	r0, #0
 80005be:	f7ff fe21 	bl	8000204 <GPIO_Init>

    for (unsigned char i = 0; i < 7; i++)
 80005c2:	2300      	movs	r3, #0
 80005c4:	71fb      	strb	r3, [r7, #7]
 80005c6:	e008      	b.n	80005da <main+0x42>
    {
        GPIO_Init(1, i, OUTPUT, PUSH_PULL);
 80005c8:	79f9      	ldrb	r1, [r7, #7]
 80005ca:	2300      	movs	r3, #0
 80005cc:	2201      	movs	r2, #1
 80005ce:	2001      	movs	r0, #1
 80005d0:	f7ff fe18 	bl	8000204 <GPIO_Init>
    for (unsigned char i = 0; i < 7; i++)
 80005d4:	79fb      	ldrb	r3, [r7, #7]
 80005d6:	3301      	adds	r3, #1
 80005d8:	71fb      	strb	r3, [r7, #7]
 80005da:	79fb      	ldrb	r3, [r7, #7]
 80005dc:	2b06      	cmp	r3, #6
 80005de:	d9f3      	bls.n	80005c8 <main+0x30>
    }

	RCC_APB2ENR |= (0x01 << 14);
 80005e0:	4b1c      	ldr	r3, [pc, #112]	; (8000654 <main+0xbc>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a1b      	ldr	r2, [pc, #108]	; (8000654 <main+0xbc>)
 80005e6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ea:	6013      	str	r3, [r2, #0]
    SYSCFG_EXTICR1 &= ~(0xff << 0);
 80005ec:	4b1a      	ldr	r3, [pc, #104]	; (8000658 <main+0xc0>)
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a19      	ldr	r2, [pc, #100]	; (8000658 <main+0xc0>)
 80005f2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80005f6:	6013      	str	r3, [r2, #0]
    enableInterrupt();
 80005f8:	f7ff ff2a 	bl	8000450 <enableInterrupt>
    EXTI_FTSR |= (0x03 << 0);
 80005fc:	4b17      	ldr	r3, [pc, #92]	; (800065c <main+0xc4>)
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	4a16      	ldr	r2, [pc, #88]	; (800065c <main+0xc4>)
 8000602:	f043 0303 	orr.w	r3, r3, #3
 8000606:	6013      	str	r3, [r2, #0]
    NVIC_ISER |= (0x03 << 6);
 8000608:	4b15      	ldr	r3, [pc, #84]	; (8000660 <main+0xc8>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a14      	ldr	r2, [pc, #80]	; (8000660 <main+0xc8>)
 800060e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000612:	6013      	str	r3, [r2, #0]

    for (unsigned char i = 0; i < 7; i++)
 8000614:	2300      	movs	r3, #0
 8000616:	71bb      	strb	r3, [r7, #6]
 8000618:	e017      	b.n	800064a <main+0xb2>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 800061a:	4b12      	ldr	r3, [pc, #72]	; (8000664 <main+0xcc>)
 800061c:	781b      	ldrb	r3, [r3, #0]
 800061e:	461a      	mov	r2, r3
 8000620:	4b11      	ldr	r3, [pc, #68]	; (8000668 <main+0xd0>)
 8000622:	5c9b      	ldrb	r3, [r3, r2]
 8000624:	4619      	mov	r1, r3
 8000626:	79bb      	ldrb	r3, [r7, #6]
 8000628:	2201      	movs	r2, #1
 800062a:	fa02 f303 	lsl.w	r3, r2, r3
 800062e:	ea01 0203 	and.w	r2, r1, r3
 8000632:	79bb      	ldrb	r3, [r7, #6]
 8000634:	fa42 f303 	asr.w	r3, r2, r3
 8000638:	b2da      	uxtb	r2, r3
 800063a:	79bb      	ldrb	r3, [r7, #6]
 800063c:	4619      	mov	r1, r3
 800063e:	2001      	movs	r0, #1
 8000640:	f7ff fea0 	bl	8000384 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 8000644:	79bb      	ldrb	r3, [r7, #6]
 8000646:	3301      	adds	r3, #1
 8000648:	71bb      	strb	r3, [r7, #6]
 800064a:	79bb      	ldrb	r3, [r7, #6]
 800064c:	2b06      	cmp	r3, #6
 800064e:	d9e4      	bls.n	800061a <main+0x82>
    }

    while (1)
 8000650:	e7fe      	b.n	8000650 <main+0xb8>
 8000652:	bf00      	nop
 8000654:	40023844 	.word	0x40023844
 8000658:	40013808 	.word	0x40013808
 800065c:	40013c0c 	.word	0x40013c0c
 8000660:	e000e100 	.word	0xe000e100
 8000664:	20000050 	.word	0x20000050
 8000668:	20000028 	.word	0x20000028

0800066c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800066c:	b480      	push	{r7}
 800066e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000670:	4b06      	ldr	r3, [pc, #24]	; (800068c <SystemInit+0x20>)
 8000672:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000676:	4a05      	ldr	r2, [pc, #20]	; (800068c <SystemInit+0x20>)
 8000678:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800067c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000680:	bf00      	nop
 8000682:	46bd      	mov	sp, r7
 8000684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000688:	4770      	bx	lr
 800068a:	bf00      	nop
 800068c:	e000ed00 	.word	0xe000ed00

08000690 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000690:	f8df d034 	ldr.w	sp, [pc, #52]	; 80006c8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000694:	480d      	ldr	r0, [pc, #52]	; (80006cc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000696:	490e      	ldr	r1, [pc, #56]	; (80006d0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000698:	4a0e      	ldr	r2, [pc, #56]	; (80006d4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800069a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800069c:	e002      	b.n	80006a4 <LoopCopyDataInit>

0800069e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800069e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006a2:	3304      	adds	r3, #4

080006a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006a8:	d3f9      	bcc.n	800069e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006aa:	4a0b      	ldr	r2, [pc, #44]	; (80006d8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80006ac:	4c0b      	ldr	r4, [pc, #44]	; (80006dc <LoopFillZerobss+0x26>)
  movs r3, #0
 80006ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006b0:	e001      	b.n	80006b6 <LoopFillZerobss>

080006b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b4:	3204      	adds	r2, #4

080006b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006b8:	d3fb      	bcc.n	80006b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80006ba:	f7ff ffd7 	bl	800066c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80006be:	f000 f811 	bl	80006e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80006c2:	f7ff ff69 	bl	8000598 <main>
  bx  lr    
 80006c6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80006c8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80006cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d0:	20000034 	.word	0x20000034
  ldr r2, =_sidata
 80006d4:	0800074c 	.word	0x0800074c
  ldr r2, =_sbss
 80006d8:	20000034 	.word	0x20000034
  ldr r4, =_ebss
 80006dc:	20000054 	.word	0x20000054

080006e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006e0:	e7fe      	b.n	80006e0 <ADC_IRQHandler>
	...

080006e4 <__libc_init_array>:
 80006e4:	b570      	push	{r4, r5, r6, lr}
 80006e6:	4d0d      	ldr	r5, [pc, #52]	; (800071c <__libc_init_array+0x38>)
 80006e8:	4c0d      	ldr	r4, [pc, #52]	; (8000720 <__libc_init_array+0x3c>)
 80006ea:	1b64      	subs	r4, r4, r5
 80006ec:	10a4      	asrs	r4, r4, #2
 80006ee:	2600      	movs	r6, #0
 80006f0:	42a6      	cmp	r6, r4
 80006f2:	d109      	bne.n	8000708 <__libc_init_array+0x24>
 80006f4:	4d0b      	ldr	r5, [pc, #44]	; (8000724 <__libc_init_array+0x40>)
 80006f6:	4c0c      	ldr	r4, [pc, #48]	; (8000728 <__libc_init_array+0x44>)
 80006f8:	f000 f818 	bl	800072c <_init>
 80006fc:	1b64      	subs	r4, r4, r5
 80006fe:	10a4      	asrs	r4, r4, #2
 8000700:	2600      	movs	r6, #0
 8000702:	42a6      	cmp	r6, r4
 8000704:	d105      	bne.n	8000712 <__libc_init_array+0x2e>
 8000706:	bd70      	pop	{r4, r5, r6, pc}
 8000708:	f855 3b04 	ldr.w	r3, [r5], #4
 800070c:	4798      	blx	r3
 800070e:	3601      	adds	r6, #1
 8000710:	e7ee      	b.n	80006f0 <__libc_init_array+0xc>
 8000712:	f855 3b04 	ldr.w	r3, [r5], #4
 8000716:	4798      	blx	r3
 8000718:	3601      	adds	r6, #1
 800071a:	e7f2      	b.n	8000702 <__libc_init_array+0x1e>
 800071c:	08000744 	.word	0x08000744
 8000720:	08000744 	.word	0x08000744
 8000724:	08000744 	.word	0x08000744
 8000728:	08000748 	.word	0x08000748

0800072c <_init>:
 800072c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800072e:	bf00      	nop
 8000730:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000732:	bc08      	pop	{r3}
 8000734:	469e      	mov	lr, r3
 8000736:	4770      	bx	lr

08000738 <_fini>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	bf00      	nop
 800073c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073e:	bc08      	pop	{r3}
 8000740:	469e      	mov	lr, r3
 8000742:	4770      	bx	lr
