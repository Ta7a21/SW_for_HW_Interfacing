
Task 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006c0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000854  08000854  00020034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000854  08000854  00020034  2**0
                  CONTENTS
  4 .ARM          00000000  08000854  08000854  00020034  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000854  08000854  00020034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000854  08000854  00010854  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000858  08000858  00010858  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000034  20000000  0800085c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000034  08000890  00020034  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000054  08000890  00020054  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c44  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004be  00000000  00000000  00020ca8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  00021168  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  000212d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000df49  00000000  00000000  000213d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000138c  00000000  00000000  0002f319  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fe01  00000000  00000000  000306a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000804a6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000038c  00000000  00000000  000804fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000034 	.word	0x20000034
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800083c 	.word	0x0800083c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000038 	.word	0x20000038
 80001d0:	0800083c 	.word	0x0800083c

080001d4 <EXTI_ClearFlag>:
#include "EXTI.h"

void EXTI_ClearFlag(unsigned char PinNum){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
	EXTI_PR |= (0x01 << PinNum);
 80001de:	4b08      	ldr	r3, [pc, #32]	; (8000200 <EXTI_ClearFlag+0x2c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	4611      	mov	r1, r2
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <EXTI_ClearFlag+0x2c>)
 80001ee:	430b      	orrs	r3, r1
 80001f0:	6013      	str	r3, [r2, #0]
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	40013c14 	.word	0x40013c14

08000204 <EXTI_UnmaskInterrupt>:

void EXTI_UnmaskInterrupt(unsigned char PinNum){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
	EXTI_IMR |= (0x01 << PinNum);
 800020e:	4b08      	ldr	r3, [pc, #32]	; (8000230 <EXTI_UnmaskInterrupt+0x2c>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	79fa      	ldrb	r2, [r7, #7]
 8000214:	2101      	movs	r1, #1
 8000216:	fa01 f202 	lsl.w	r2, r1, r2
 800021a:	4611      	mov	r1, r2
 800021c:	4a04      	ldr	r2, [pc, #16]	; (8000230 <EXTI_UnmaskInterrupt+0x2c>)
 800021e:	430b      	orrs	r3, r1
 8000220:	6013      	str	r3, [r2, #0]
}
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	40013c00 	.word	0x40013c00

08000234 <EXTI_MaskInterrupt>:

void EXTI_MaskInterrupt(unsigned char PinNum){
 8000234:	b480      	push	{r7}
 8000236:	b083      	sub	sp, #12
 8000238:	af00      	add	r7, sp, #0
 800023a:	4603      	mov	r3, r0
 800023c:	71fb      	strb	r3, [r7, #7]
	EXTI_IMR &= (0x01 << PinNum);
 800023e:	4b08      	ldr	r3, [pc, #32]	; (8000260 <EXTI_MaskInterrupt+0x2c>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	2101      	movs	r1, #1
 8000246:	fa01 f202 	lsl.w	r2, r1, r2
 800024a:	4611      	mov	r1, r2
 800024c:	4a04      	ldr	r2, [pc, #16]	; (8000260 <EXTI_MaskInterrupt+0x2c>)
 800024e:	400b      	ands	r3, r1
 8000250:	6013      	str	r3, [r2, #0]
}
 8000252:	bf00      	nop
 8000254:	370c      	adds	r7, #12
 8000256:	46bd      	mov	sp, r7
 8000258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	40013c00 	.word	0x40013c00

08000264 <EXTI_FallingTrigger>:

void EXTI_FallingTrigger(unsigned char PinNum){
 8000264:	b480      	push	{r7}
 8000266:	b083      	sub	sp, #12
 8000268:	af00      	add	r7, sp, #0
 800026a:	4603      	mov	r3, r0
 800026c:	71fb      	strb	r3, [r7, #7]
	EXTI_FTSR |= (0x01 << PinNum);
 800026e:	4b08      	ldr	r3, [pc, #32]	; (8000290 <EXTI_FallingTrigger+0x2c>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	79fa      	ldrb	r2, [r7, #7]
 8000274:	2101      	movs	r1, #1
 8000276:	fa01 f202 	lsl.w	r2, r1, r2
 800027a:	4611      	mov	r1, r2
 800027c:	4a04      	ldr	r2, [pc, #16]	; (8000290 <EXTI_FallingTrigger+0x2c>)
 800027e:	430b      	orrs	r3, r1
 8000280:	6013      	str	r3, [r2, #0]
}
 8000282:	bf00      	nop
 8000284:	370c      	adds	r7, #12
 8000286:	46bd      	mov	sp, r7
 8000288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop
 8000290:	40013c0c 	.word	0x40013c0c

08000294 <GPIO_Init>:

unsigned int *GPIO_RegisterTable[2][5] = {{GPIOAMODER, GPIOAOTYPER, GPIOAPUPDR, GPIOAIDR, GPIOAODR}, {GPIOBMODER, GPIOBOTYPER, GPIOBPUPDR, GPIOBIDR, GPIOBODR}};

void GPIO_Init(unsigned char PortId, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState)
{
 8000294:	b490      	push	{r4, r7}
 8000296:	b082      	sub	sp, #8
 8000298:	af00      	add	r7, sp, #0
 800029a:	4604      	mov	r4, r0
 800029c:	4608      	mov	r0, r1
 800029e:	4611      	mov	r1, r2
 80002a0:	461a      	mov	r2, r3
 80002a2:	4623      	mov	r3, r4
 80002a4:	71fb      	strb	r3, [r7, #7]
 80002a6:	4603      	mov	r3, r0
 80002a8:	71bb      	strb	r3, [r7, #6]
 80002aa:	460b      	mov	r3, r1
 80002ac:	717b      	strb	r3, [r7, #5]
 80002ae:	4613      	mov	r3, r2
 80002b0:	713b      	strb	r3, [r7, #4]
  *GPIO_RegisterTable[PortId][0] &= ~(0x03 << 2 * PinNum);
 80002b2:	79fa      	ldrb	r2, [r7, #7]
 80002b4:	4956      	ldr	r1, [pc, #344]	; (8000410 <GPIO_Init+0x17c>)
 80002b6:	4613      	mov	r3, r2
 80002b8:	009b      	lsls	r3, r3, #2
 80002ba:	4413      	add	r3, r2
 80002bc:	009b      	lsls	r3, r3, #2
 80002be:	440b      	add	r3, r1
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	6819      	ldr	r1, [r3, #0]
 80002c4:	79bb      	ldrb	r3, [r7, #6]
 80002c6:	005b      	lsls	r3, r3, #1
 80002c8:	2203      	movs	r2, #3
 80002ca:	fa02 f303 	lsl.w	r3, r2, r3
 80002ce:	43db      	mvns	r3, r3
 80002d0:	461c      	mov	r4, r3
 80002d2:	79fa      	ldrb	r2, [r7, #7]
 80002d4:	484e      	ldr	r0, [pc, #312]	; (8000410 <GPIO_Init+0x17c>)
 80002d6:	4613      	mov	r3, r2
 80002d8:	009b      	lsls	r3, r3, #2
 80002da:	4413      	add	r3, r2
 80002dc:	009b      	lsls	r3, r3, #2
 80002de:	4403      	add	r3, r0
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	ea01 0204 	and.w	r2, r1, r4
 80002e6:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][0] |= PinMode << 2 * PinNum;
 80002e8:	79fa      	ldrb	r2, [r7, #7]
 80002ea:	4949      	ldr	r1, [pc, #292]	; (8000410 <GPIO_Init+0x17c>)
 80002ec:	4613      	mov	r3, r2
 80002ee:	009b      	lsls	r3, r3, #2
 80002f0:	4413      	add	r3, r2
 80002f2:	009b      	lsls	r3, r3, #2
 80002f4:	440b      	add	r3, r1
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	6819      	ldr	r1, [r3, #0]
 80002fa:	797a      	ldrb	r2, [r7, #5]
 80002fc:	79bb      	ldrb	r3, [r7, #6]
 80002fe:	005b      	lsls	r3, r3, #1
 8000300:	fa02 f303 	lsl.w	r3, r2, r3
 8000304:	461c      	mov	r4, r3
 8000306:	79fa      	ldrb	r2, [r7, #7]
 8000308:	4841      	ldr	r0, [pc, #260]	; (8000410 <GPIO_Init+0x17c>)
 800030a:	4613      	mov	r3, r2
 800030c:	009b      	lsls	r3, r3, #2
 800030e:	4413      	add	r3, r2
 8000310:	009b      	lsls	r3, r3, #2
 8000312:	4403      	add	r3, r0
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	ea41 0204 	orr.w	r2, r1, r4
 800031a:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][1] &= ~(1 << PinNum);
 800031c:	79fa      	ldrb	r2, [r7, #7]
 800031e:	493c      	ldr	r1, [pc, #240]	; (8000410 <GPIO_Init+0x17c>)
 8000320:	4613      	mov	r3, r2
 8000322:	009b      	lsls	r3, r3, #2
 8000324:	4413      	add	r3, r2
 8000326:	009b      	lsls	r3, r3, #2
 8000328:	440b      	add	r3, r1
 800032a:	3304      	adds	r3, #4
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	6819      	ldr	r1, [r3, #0]
 8000330:	79bb      	ldrb	r3, [r7, #6]
 8000332:	2201      	movs	r2, #1
 8000334:	fa02 f303 	lsl.w	r3, r2, r3
 8000338:	43db      	mvns	r3, r3
 800033a:	461c      	mov	r4, r3
 800033c:	79fa      	ldrb	r2, [r7, #7]
 800033e:	4834      	ldr	r0, [pc, #208]	; (8000410 <GPIO_Init+0x17c>)
 8000340:	4613      	mov	r3, r2
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	4413      	add	r3, r2
 8000346:	009b      	lsls	r3, r3, #2
 8000348:	4403      	add	r3, r0
 800034a:	3304      	adds	r3, #4
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	ea01 0204 	and.w	r2, r1, r4
 8000352:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 8000354:	79fa      	ldrb	r2, [r7, #7]
 8000356:	492e      	ldr	r1, [pc, #184]	; (8000410 <GPIO_Init+0x17c>)
 8000358:	4613      	mov	r3, r2
 800035a:	009b      	lsls	r3, r3, #2
 800035c:	4413      	add	r3, r2
 800035e:	009b      	lsls	r3, r3, #2
 8000360:	440b      	add	r3, r1
 8000362:	3304      	adds	r3, #4
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	6819      	ldr	r1, [r3, #0]
 8000368:	793b      	ldrb	r3, [r7, #4]
 800036a:	f003 0201 	and.w	r2, r3, #1
 800036e:	79bb      	ldrb	r3, [r7, #6]
 8000370:	fa02 f303 	lsl.w	r3, r2, r3
 8000374:	461c      	mov	r4, r3
 8000376:	79fa      	ldrb	r2, [r7, #7]
 8000378:	4825      	ldr	r0, [pc, #148]	; (8000410 <GPIO_Init+0x17c>)
 800037a:	4613      	mov	r3, r2
 800037c:	009b      	lsls	r3, r3, #2
 800037e:	4413      	add	r3, r2
 8000380:	009b      	lsls	r3, r3, #2
 8000382:	4403      	add	r3, r0
 8000384:	3304      	adds	r3, #4
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	ea41 0204 	orr.w	r2, r1, r4
 800038c:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][2] &= ~(0x03 << 2 * PinNum);
 800038e:	79fa      	ldrb	r2, [r7, #7]
 8000390:	491f      	ldr	r1, [pc, #124]	; (8000410 <GPIO_Init+0x17c>)
 8000392:	4613      	mov	r3, r2
 8000394:	009b      	lsls	r3, r3, #2
 8000396:	4413      	add	r3, r2
 8000398:	009b      	lsls	r3, r3, #2
 800039a:	440b      	add	r3, r1
 800039c:	3308      	adds	r3, #8
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6819      	ldr	r1, [r3, #0]
 80003a2:	79bb      	ldrb	r3, [r7, #6]
 80003a4:	005b      	lsls	r3, r3, #1
 80003a6:	2203      	movs	r2, #3
 80003a8:	fa02 f303 	lsl.w	r3, r2, r3
 80003ac:	43db      	mvns	r3, r3
 80003ae:	461c      	mov	r4, r3
 80003b0:	79fa      	ldrb	r2, [r7, #7]
 80003b2:	4817      	ldr	r0, [pc, #92]	; (8000410 <GPIO_Init+0x17c>)
 80003b4:	4613      	mov	r3, r2
 80003b6:	009b      	lsls	r3, r3, #2
 80003b8:	4413      	add	r3, r2
 80003ba:	009b      	lsls	r3, r3, #2
 80003bc:	4403      	add	r3, r0
 80003be:	3308      	adds	r3, #8
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	ea01 0204 	and.w	r2, r1, r4
 80003c6:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 80003c8:	79fa      	ldrb	r2, [r7, #7]
 80003ca:	4911      	ldr	r1, [pc, #68]	; (8000410 <GPIO_Init+0x17c>)
 80003cc:	4613      	mov	r3, r2
 80003ce:	009b      	lsls	r3, r3, #2
 80003d0:	4413      	add	r3, r2
 80003d2:	009b      	lsls	r3, r3, #2
 80003d4:	440b      	add	r3, r1
 80003d6:	3308      	adds	r3, #8
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	6819      	ldr	r1, [r3, #0]
 80003dc:	793b      	ldrb	r3, [r7, #4]
 80003de:	105b      	asrs	r3, r3, #1
 80003e0:	f003 0203 	and.w	r2, r3, #3
 80003e4:	79bb      	ldrb	r3, [r7, #6]
 80003e6:	005b      	lsls	r3, r3, #1
 80003e8:	fa02 f303 	lsl.w	r3, r2, r3
 80003ec:	461c      	mov	r4, r3
 80003ee:	79fa      	ldrb	r2, [r7, #7]
 80003f0:	4807      	ldr	r0, [pc, #28]	; (8000410 <GPIO_Init+0x17c>)
 80003f2:	4613      	mov	r3, r2
 80003f4:	009b      	lsls	r3, r3, #2
 80003f6:	4413      	add	r3, r2
 80003f8:	009b      	lsls	r3, r3, #2
 80003fa:	4403      	add	r3, r0
 80003fc:	3308      	adds	r3, #8
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	ea41 0204 	orr.w	r2, r1, r4
 8000404:	601a      	str	r2, [r3, #0]
}
 8000406:	bf00      	nop
 8000408:	3708      	adds	r7, #8
 800040a:	46bd      	mov	sp, r7
 800040c:	bc90      	pop	{r4, r7}
 800040e:	4770      	bx	lr
 8000410:	20000000 	.word	0x20000000

08000414 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PortId, unsigned char PinNum,
                            unsigned char Data)
{
 8000414:	b490      	push	{r4, r7}
 8000416:	b084      	sub	sp, #16
 8000418:	af00      	add	r7, sp, #0
 800041a:	4603      	mov	r3, r0
 800041c:	71fb      	strb	r3, [r7, #7]
 800041e:	460b      	mov	r3, r1
 8000420:	71bb      	strb	r3, [r7, #6]
 8000422:	4613      	mov	r3, r2
 8000424:	717b      	strb	r3, [r7, #5]
  unsigned char result;
  if (((*GPIO_RegisterTable[PortId][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1)
 8000426:	79fa      	ldrb	r2, [r7, #7]
 8000428:	492c      	ldr	r1, [pc, #176]	; (80004dc <GPIO_WritePin+0xc8>)
 800042a:	4613      	mov	r3, r2
 800042c:	009b      	lsls	r3, r3, #2
 800042e:	4413      	add	r3, r2
 8000430:	009b      	lsls	r3, r3, #2
 8000432:	440b      	add	r3, r1
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	79ba      	ldrb	r2, [r7, #6]
 800043a:	0052      	lsls	r2, r2, #1
 800043c:	2103      	movs	r1, #3
 800043e:	fa01 f202 	lsl.w	r2, r1, r2
 8000442:	401a      	ands	r2, r3
 8000444:	79bb      	ldrb	r3, [r7, #6]
 8000446:	005b      	lsls	r3, r3, #1
 8000448:	fa22 f303 	lsr.w	r3, r2, r3
 800044c:	2b01      	cmp	r3, #1
 800044e:	d13d      	bne.n	80004cc <GPIO_WritePin+0xb8>
  {
    if (Data)
 8000450:	797b      	ldrb	r3, [r7, #5]
 8000452:	2b00      	cmp	r3, #0
 8000454:	d01b      	beq.n	800048e <GPIO_WritePin+0x7a>
    {
      *GPIO_RegisterTable[PortId][4] |= (1 << PinNum);
 8000456:	79fa      	ldrb	r2, [r7, #7]
 8000458:	4920      	ldr	r1, [pc, #128]	; (80004dc <GPIO_WritePin+0xc8>)
 800045a:	4613      	mov	r3, r2
 800045c:	009b      	lsls	r3, r3, #2
 800045e:	4413      	add	r3, r2
 8000460:	009b      	lsls	r3, r3, #2
 8000462:	440b      	add	r3, r1
 8000464:	3310      	adds	r3, #16
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	6819      	ldr	r1, [r3, #0]
 800046a:	79bb      	ldrb	r3, [r7, #6]
 800046c:	2201      	movs	r2, #1
 800046e:	fa02 f303 	lsl.w	r3, r2, r3
 8000472:	461c      	mov	r4, r3
 8000474:	79fa      	ldrb	r2, [r7, #7]
 8000476:	4819      	ldr	r0, [pc, #100]	; (80004dc <GPIO_WritePin+0xc8>)
 8000478:	4613      	mov	r3, r2
 800047a:	009b      	lsls	r3, r3, #2
 800047c:	4413      	add	r3, r2
 800047e:	009b      	lsls	r3, r3, #2
 8000480:	4403      	add	r3, r0
 8000482:	3310      	adds	r3, #16
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	ea41 0204 	orr.w	r2, r1, r4
 800048a:	601a      	str	r2, [r3, #0]
 800048c:	e01b      	b.n	80004c6 <GPIO_WritePin+0xb2>
    }
    else
    {
      *GPIO_RegisterTable[PortId][4] &= ~(1 << PinNum);
 800048e:	79fa      	ldrb	r2, [r7, #7]
 8000490:	4912      	ldr	r1, [pc, #72]	; (80004dc <GPIO_WritePin+0xc8>)
 8000492:	4613      	mov	r3, r2
 8000494:	009b      	lsls	r3, r3, #2
 8000496:	4413      	add	r3, r2
 8000498:	009b      	lsls	r3, r3, #2
 800049a:	440b      	add	r3, r1
 800049c:	3310      	adds	r3, #16
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	6819      	ldr	r1, [r3, #0]
 80004a2:	79bb      	ldrb	r3, [r7, #6]
 80004a4:	2201      	movs	r2, #1
 80004a6:	fa02 f303 	lsl.w	r3, r2, r3
 80004aa:	43db      	mvns	r3, r3
 80004ac:	461c      	mov	r4, r3
 80004ae:	79fa      	ldrb	r2, [r7, #7]
 80004b0:	480a      	ldr	r0, [pc, #40]	; (80004dc <GPIO_WritePin+0xc8>)
 80004b2:	4613      	mov	r3, r2
 80004b4:	009b      	lsls	r3, r3, #2
 80004b6:	4413      	add	r3, r2
 80004b8:	009b      	lsls	r3, r3, #2
 80004ba:	4403      	add	r3, r0
 80004bc:	3310      	adds	r3, #16
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	ea01 0204 	and.w	r2, r1, r4
 80004c4:	601a      	str	r2, [r3, #0]
    }
    result = OK;
 80004c6:	2300      	movs	r3, #0
 80004c8:	73fb      	strb	r3, [r7, #15]
 80004ca:	e001      	b.n	80004d0 <GPIO_WritePin+0xbc>
  }
  else
  {
    result = NOK;
 80004cc:	2301      	movs	r3, #1
 80004ce:	73fb      	strb	r3, [r7, #15]
  }
  return result;
 80004d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80004d2:	4618      	mov	r0, r3
 80004d4:	3710      	adds	r7, #16
 80004d6:	46bd      	mov	sp, r7
 80004d8:	bc90      	pop	{r4, r7}
 80004da:	4770      	bx	lr
 80004dc:	20000000 	.word	0x20000000

080004e0 <NVIC_EnableExternal>:
#include "NVIC.h"

void NVIC_EnableExternal(unsigned char InterruptLine){
 80004e0:	b480      	push	{r7}
 80004e2:	b083      	sub	sp, #12
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	4603      	mov	r3, r0
 80004e8:	71fb      	strb	r3, [r7, #7]
	NVIC_ISER0 |= ((0x01<<InterruptLine) << 6);
 80004ea:	4b08      	ldr	r3, [pc, #32]	; (800050c <NVIC_EnableExternal+0x2c>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	79fa      	ldrb	r2, [r7, #7]
 80004f0:	2101      	movs	r1, #1
 80004f2:	fa01 f202 	lsl.w	r2, r1, r2
 80004f6:	0192      	lsls	r2, r2, #6
 80004f8:	4611      	mov	r1, r2
 80004fa:	4a04      	ldr	r2, [pc, #16]	; (800050c <NVIC_EnableExternal+0x2c>)
 80004fc:	430b      	orrs	r3, r1
 80004fe:	6013      	str	r3, [r2, #0]
}
 8000500:	bf00      	nop
 8000502:	370c      	adds	r7, #12
 8000504:	46bd      	mov	sp, r7
 8000506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050a:	4770      	bx	lr
 800050c:	e000e100 	.word	0xe000e100

08000510 <RCC_EnableGPIO>:
#include "RCC.h"

void RCC_EnableGPIO(unsigned char PortId){
 8000510:	b480      	push	{r7}
 8000512:	b083      	sub	sp, #12
 8000514:	af00      	add	r7, sp, #0
 8000516:	4603      	mov	r3, r0
 8000518:	71fb      	strb	r3, [r7, #7]
    RCC_AHB1ENR |= (0x01 << PortId);
 800051a:	4b08      	ldr	r3, [pc, #32]	; (800053c <RCC_EnableGPIO+0x2c>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	79fa      	ldrb	r2, [r7, #7]
 8000520:	2101      	movs	r1, #1
 8000522:	fa01 f202 	lsl.w	r2, r1, r2
 8000526:	4611      	mov	r1, r2
 8000528:	4a04      	ldr	r2, [pc, #16]	; (800053c <RCC_EnableGPIO+0x2c>)
 800052a:	430b      	orrs	r3, r1
 800052c:	6013      	str	r3, [r2, #0]
}
 800052e:	bf00      	nop
 8000530:	370c      	adds	r7, #12
 8000532:	46bd      	mov	sp, r7
 8000534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	40023830 	.word	0x40023830

08000540 <RCC_EnableSYSCFG>:

void RCC_EnableSYSCFG(){
 8000540:	b480      	push	{r7}
 8000542:	af00      	add	r7, sp, #0
	RCC_APB2ENR |= (0x01 << 14);
 8000544:	4b05      	ldr	r3, [pc, #20]	; (800055c <RCC_EnableSYSCFG+0x1c>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a04      	ldr	r2, [pc, #16]	; (800055c <RCC_EnableSYSCFG+0x1c>)
 800054a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800054e:	6013      	str	r3, [r2, #0]
}
 8000550:	bf00      	nop
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr
 800055a:	bf00      	nop
 800055c:	40023844 	.word	0x40023844

08000560 <SYSCFG_ExternalPort>:
#include "SYSCFG.h"

void SYSCFG_ExternalPort(unsigned char PortNum, unsigned char PinNum){
 8000560:	b480      	push	{r7}
 8000562:	b083      	sub	sp, #12
 8000564:	af00      	add	r7, sp, #0
 8000566:	4603      	mov	r3, r0
 8000568:	460a      	mov	r2, r1
 800056a:	71fb      	strb	r3, [r7, #7]
 800056c:	4613      	mov	r3, r2
 800056e:	71bb      	strb	r3, [r7, #6]
	SYSCFG_EXTICR1 &= ~((0x0f-PortNum) << 4*PinNum);
 8000570:	4b09      	ldr	r3, [pc, #36]	; (8000598 <SYSCFG_ExternalPort+0x38>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	79fa      	ldrb	r2, [r7, #7]
 8000576:	f1c2 010f 	rsb	r1, r2, #15
 800057a:	79ba      	ldrb	r2, [r7, #6]
 800057c:	0092      	lsls	r2, r2, #2
 800057e:	fa01 f202 	lsl.w	r2, r1, r2
 8000582:	43d2      	mvns	r2, r2
 8000584:	4611      	mov	r1, r2
 8000586:	4a04      	ldr	r2, [pc, #16]	; (8000598 <SYSCFG_ExternalPort+0x38>)
 8000588:	400b      	ands	r3, r1
 800058a:	6013      	str	r3, [r2, #0]
}
 800058c:	bf00      	nop
 800058e:	370c      	adds	r7, #12
 8000590:	46bd      	mov	sp, r7
 8000592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000596:	4770      	bx	lr
 8000598:	40013808 	.word	0x40013808

0800059c <enableInterrupt>:

static unsigned char sevenSegHex[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66,
                                        0x6D, 0x7D, 0x07, 0x7F, 0x6F};
unsigned char counter = 0;

void enableInterrupt(){
 800059c:	b580      	push	{r7, lr}
 800059e:	af00      	add	r7, sp, #0
	EXTI_UnmaskInterrupt(0);
 80005a0:	2000      	movs	r0, #0
 80005a2:	f7ff fe2f 	bl	8000204 <EXTI_UnmaskInterrupt>
	EXTI_UnmaskInterrupt(1);
 80005a6:	2001      	movs	r0, #1
 80005a8:	f7ff fe2c 	bl	8000204 <EXTI_UnmaskInterrupt>
}
 80005ac:	bf00      	nop
 80005ae:	bd80      	pop	{r7, pc}

080005b0 <disableInterrupt>:

void disableInterrupt(){
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
	EXTI_MaskInterrupt(0);
 80005b4:	2000      	movs	r0, #0
 80005b6:	f7ff fe3d 	bl	8000234 <EXTI_MaskInterrupt>
	EXTI_MaskInterrupt(1);
 80005ba:	2001      	movs	r0, #1
 80005bc:	f7ff fe3a 	bl	8000234 <EXTI_MaskInterrupt>
}
 80005c0:	bf00      	nop
 80005c2:	bd80      	pop	{r7, pc}

080005c4 <ISR_Increment>:

void ISR_Increment(void)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b082      	sub	sp, #8
 80005c8:	af00      	add	r7, sp, #0
	disableInterrupt();
 80005ca:	f7ff fff1 	bl	80005b0 <disableInterrupt>
    counter = (counter == 9) ? 9 : counter + 1;
 80005ce:	4b19      	ldr	r3, [pc, #100]	; (8000634 <ISR_Increment+0x70>)
 80005d0:	781b      	ldrb	r3, [r3, #0]
 80005d2:	2b09      	cmp	r3, #9
 80005d4:	d004      	beq.n	80005e0 <ISR_Increment+0x1c>
 80005d6:	4b17      	ldr	r3, [pc, #92]	; (8000634 <ISR_Increment+0x70>)
 80005d8:	781b      	ldrb	r3, [r3, #0]
 80005da:	3301      	adds	r3, #1
 80005dc:	b2db      	uxtb	r3, r3
 80005de:	e000      	b.n	80005e2 <ISR_Increment+0x1e>
 80005e0:	2309      	movs	r3, #9
 80005e2:	4a14      	ldr	r2, [pc, #80]	; (8000634 <ISR_Increment+0x70>)
 80005e4:	7013      	strb	r3, [r2, #0]
    enableInterrupt();
 80005e6:	f7ff ffd9 	bl	800059c <enableInterrupt>

    for (unsigned char i = 0; i < 7; i++)
 80005ea:	2300      	movs	r3, #0
 80005ec:	71fb      	strb	r3, [r7, #7]
 80005ee:	e017      	b.n	8000620 <ISR_Increment+0x5c>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 80005f0:	4b10      	ldr	r3, [pc, #64]	; (8000634 <ISR_Increment+0x70>)
 80005f2:	781b      	ldrb	r3, [r3, #0]
 80005f4:	461a      	mov	r2, r3
 80005f6:	4b10      	ldr	r3, [pc, #64]	; (8000638 <ISR_Increment+0x74>)
 80005f8:	5c9b      	ldrb	r3, [r3, r2]
 80005fa:	4619      	mov	r1, r3
 80005fc:	79fb      	ldrb	r3, [r7, #7]
 80005fe:	2201      	movs	r2, #1
 8000600:	fa02 f303 	lsl.w	r3, r2, r3
 8000604:	ea01 0203 	and.w	r2, r1, r3
 8000608:	79fb      	ldrb	r3, [r7, #7]
 800060a:	fa42 f303 	asr.w	r3, r2, r3
 800060e:	b2da      	uxtb	r2, r3
 8000610:	79fb      	ldrb	r3, [r7, #7]
 8000612:	4619      	mov	r1, r3
 8000614:	2001      	movs	r0, #1
 8000616:	f7ff fefd 	bl	8000414 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 800061a:	79fb      	ldrb	r3, [r7, #7]
 800061c:	3301      	adds	r3, #1
 800061e:	71fb      	strb	r3, [r7, #7]
 8000620:	79fb      	ldrb	r3, [r7, #7]
 8000622:	2b06      	cmp	r3, #6
 8000624:	d9e4      	bls.n	80005f0 <ISR_Increment+0x2c>
    }

    EXTI_ClearFlag(0);
 8000626:	2000      	movs	r0, #0
 8000628:	f7ff fdd4 	bl	80001d4 <EXTI_ClearFlag>
}
 800062c:	bf00      	nop
 800062e:	3708      	adds	r7, #8
 8000630:	46bd      	mov	sp, r7
 8000632:	bd80      	pop	{r7, pc}
 8000634:	20000050 	.word	0x20000050
 8000638:	20000028 	.word	0x20000028

0800063c <ISR_Decrement>:

void ISR_Decrement(void)
{
 800063c:	b580      	push	{r7, lr}
 800063e:	b082      	sub	sp, #8
 8000640:	af00      	add	r7, sp, #0
	disableInterrupt();
 8000642:	f7ff ffb5 	bl	80005b0 <disableInterrupt>
    counter = (counter == 0) ? 0 : counter - 1;
 8000646:	4b19      	ldr	r3, [pc, #100]	; (80006ac <ISR_Decrement+0x70>)
 8000648:	781b      	ldrb	r3, [r3, #0]
 800064a:	2b00      	cmp	r3, #0
 800064c:	d004      	beq.n	8000658 <ISR_Decrement+0x1c>
 800064e:	4b17      	ldr	r3, [pc, #92]	; (80006ac <ISR_Decrement+0x70>)
 8000650:	781b      	ldrb	r3, [r3, #0]
 8000652:	3b01      	subs	r3, #1
 8000654:	b2db      	uxtb	r3, r3
 8000656:	e000      	b.n	800065a <ISR_Decrement+0x1e>
 8000658:	2300      	movs	r3, #0
 800065a:	4a14      	ldr	r2, [pc, #80]	; (80006ac <ISR_Decrement+0x70>)
 800065c:	7013      	strb	r3, [r2, #0]
    enableInterrupt();
 800065e:	f7ff ff9d 	bl	800059c <enableInterrupt>

    for (unsigned char i = 0; i < 7; i++)
 8000662:	2300      	movs	r3, #0
 8000664:	71fb      	strb	r3, [r7, #7]
 8000666:	e017      	b.n	8000698 <ISR_Decrement+0x5c>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 8000668:	4b10      	ldr	r3, [pc, #64]	; (80006ac <ISR_Decrement+0x70>)
 800066a:	781b      	ldrb	r3, [r3, #0]
 800066c:	461a      	mov	r2, r3
 800066e:	4b10      	ldr	r3, [pc, #64]	; (80006b0 <ISR_Decrement+0x74>)
 8000670:	5c9b      	ldrb	r3, [r3, r2]
 8000672:	4619      	mov	r1, r3
 8000674:	79fb      	ldrb	r3, [r7, #7]
 8000676:	2201      	movs	r2, #1
 8000678:	fa02 f303 	lsl.w	r3, r2, r3
 800067c:	ea01 0203 	and.w	r2, r1, r3
 8000680:	79fb      	ldrb	r3, [r7, #7]
 8000682:	fa42 f303 	asr.w	r3, r2, r3
 8000686:	b2da      	uxtb	r2, r3
 8000688:	79fb      	ldrb	r3, [r7, #7]
 800068a:	4619      	mov	r1, r3
 800068c:	2001      	movs	r0, #1
 800068e:	f7ff fec1 	bl	8000414 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 8000692:	79fb      	ldrb	r3, [r7, #7]
 8000694:	3301      	adds	r3, #1
 8000696:	71fb      	strb	r3, [r7, #7]
 8000698:	79fb      	ldrb	r3, [r7, #7]
 800069a:	2b06      	cmp	r3, #6
 800069c:	d9e4      	bls.n	8000668 <ISR_Decrement+0x2c>
    }

    EXTI_ClearFlag(1);
 800069e:	2001      	movs	r0, #1
 80006a0:	f7ff fd98 	bl	80001d4 <EXTI_ClearFlag>
}
 80006a4:	bf00      	nop
 80006a6:	3708      	adds	r7, #8
 80006a8:	46bd      	mov	sp, r7
 80006aa:	bd80      	pop	{r7, pc}
 80006ac:	20000050 	.word	0x20000050
 80006b0:	20000028 	.word	0x20000028

080006b4 <main>:

int main(void)
{
 80006b4:	b580      	push	{r7, lr}
 80006b6:	b082      	sub	sp, #8
 80006b8:	af00      	add	r7, sp, #0

    RCC_EnableGPIO(0);
 80006ba:	2000      	movs	r0, #0
 80006bc:	f7ff ff28 	bl	8000510 <RCC_EnableGPIO>
    RCC_EnableGPIO(1);
 80006c0:	2001      	movs	r0, #1
 80006c2:	f7ff ff25 	bl	8000510 <RCC_EnableGPIO>
    GPIO_Init(0, 0, INPUT, PULL_UP);
 80006c6:	2302      	movs	r3, #2
 80006c8:	2200      	movs	r2, #0
 80006ca:	2100      	movs	r1, #0
 80006cc:	2000      	movs	r0, #0
 80006ce:	f7ff fde1 	bl	8000294 <GPIO_Init>
    GPIO_Init(0, 1, INPUT, PULL_UP);
 80006d2:	2302      	movs	r3, #2
 80006d4:	2200      	movs	r2, #0
 80006d6:	2101      	movs	r1, #1
 80006d8:	2000      	movs	r0, #0
 80006da:	f7ff fddb 	bl	8000294 <GPIO_Init>

    for (unsigned char i = 0; i < 7; i++)
 80006de:	2300      	movs	r3, #0
 80006e0:	71fb      	strb	r3, [r7, #7]
 80006e2:	e008      	b.n	80006f6 <main+0x42>
    {
        GPIO_Init(1, i, OUTPUT, PUSH_PULL);
 80006e4:	79f9      	ldrb	r1, [r7, #7]
 80006e6:	2300      	movs	r3, #0
 80006e8:	2201      	movs	r2, #1
 80006ea:	2001      	movs	r0, #1
 80006ec:	f7ff fdd2 	bl	8000294 <GPIO_Init>
    for (unsigned char i = 0; i < 7; i++)
 80006f0:	79fb      	ldrb	r3, [r7, #7]
 80006f2:	3301      	adds	r3, #1
 80006f4:	71fb      	strb	r3, [r7, #7]
 80006f6:	79fb      	ldrb	r3, [r7, #7]
 80006f8:	2b06      	cmp	r3, #6
 80006fa:	d9f3      	bls.n	80006e4 <main+0x30>
    }

    RCC_EnableSYSCFG();
 80006fc:	f7ff ff20 	bl	8000540 <RCC_EnableSYSCFG>
    SYSCFG_ExternalPort(0,0);
 8000700:	2100      	movs	r1, #0
 8000702:	2000      	movs	r0, #0
 8000704:	f7ff ff2c 	bl	8000560 <SYSCFG_ExternalPort>
    SYSCFG_ExternalPort(0,1);
 8000708:	2101      	movs	r1, #1
 800070a:	2000      	movs	r0, #0
 800070c:	f7ff ff28 	bl	8000560 <SYSCFG_ExternalPort>

	EXTI_UnmaskInterrupt(0);
 8000710:	2000      	movs	r0, #0
 8000712:	f7ff fd77 	bl	8000204 <EXTI_UnmaskInterrupt>
	EXTI_UnmaskInterrupt(1);
 8000716:	2001      	movs	r0, #1
 8000718:	f7ff fd74 	bl	8000204 <EXTI_UnmaskInterrupt>

	EXTI_FallingTrigger(0);
 800071c:	2000      	movs	r0, #0
 800071e:	f7ff fda1 	bl	8000264 <EXTI_FallingTrigger>
	EXTI_FallingTrigger(1);
 8000722:	2001      	movs	r0, #1
 8000724:	f7ff fd9e 	bl	8000264 <EXTI_FallingTrigger>

    NVIC_EnableExternal(0);
 8000728:	2000      	movs	r0, #0
 800072a:	f7ff fed9 	bl	80004e0 <NVIC_EnableExternal>
    NVIC_EnableExternal(1);
 800072e:	2001      	movs	r0, #1
 8000730:	f7ff fed6 	bl	80004e0 <NVIC_EnableExternal>

    for (unsigned char i = 0; i < 7; i++)
 8000734:	2300      	movs	r3, #0
 8000736:	71bb      	strb	r3, [r7, #6]
 8000738:	e017      	b.n	800076a <main+0xb6>
    {
        GPIO_WritePin(1, i, (sevenSegHex[counter] & (1 << i)) >> i);
 800073a:	4b0e      	ldr	r3, [pc, #56]	; (8000774 <main+0xc0>)
 800073c:	781b      	ldrb	r3, [r3, #0]
 800073e:	461a      	mov	r2, r3
 8000740:	4b0d      	ldr	r3, [pc, #52]	; (8000778 <main+0xc4>)
 8000742:	5c9b      	ldrb	r3, [r3, r2]
 8000744:	4619      	mov	r1, r3
 8000746:	79bb      	ldrb	r3, [r7, #6]
 8000748:	2201      	movs	r2, #1
 800074a:	fa02 f303 	lsl.w	r3, r2, r3
 800074e:	ea01 0203 	and.w	r2, r1, r3
 8000752:	79bb      	ldrb	r3, [r7, #6]
 8000754:	fa42 f303 	asr.w	r3, r2, r3
 8000758:	b2da      	uxtb	r2, r3
 800075a:	79bb      	ldrb	r3, [r7, #6]
 800075c:	4619      	mov	r1, r3
 800075e:	2001      	movs	r0, #1
 8000760:	f7ff fe58 	bl	8000414 <GPIO_WritePin>
    for (unsigned char i = 0; i < 7; i++)
 8000764:	79bb      	ldrb	r3, [r7, #6]
 8000766:	3301      	adds	r3, #1
 8000768:	71bb      	strb	r3, [r7, #6]
 800076a:	79bb      	ldrb	r3, [r7, #6]
 800076c:	2b06      	cmp	r3, #6
 800076e:	d9e4      	bls.n	800073a <main+0x86>
    }

    while (1)
 8000770:	e7fe      	b.n	8000770 <main+0xbc>
 8000772:	bf00      	nop
 8000774:	20000050 	.word	0x20000050
 8000778:	20000028 	.word	0x20000028

0800077c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800077c:	b480      	push	{r7}
 800077e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000780:	4b06      	ldr	r3, [pc, #24]	; (800079c <SystemInit+0x20>)
 8000782:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000786:	4a05      	ldr	r2, [pc, #20]	; (800079c <SystemInit+0x20>)
 8000788:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800078c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000790:	bf00      	nop
 8000792:	46bd      	mov	sp, r7
 8000794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000798:	4770      	bx	lr
 800079a:	bf00      	nop
 800079c:	e000ed00 	.word	0xe000ed00

080007a0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80007a0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80007d8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80007a4:	480d      	ldr	r0, [pc, #52]	; (80007dc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80007a6:	490e      	ldr	r1, [pc, #56]	; (80007e0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80007a8:	4a0e      	ldr	r2, [pc, #56]	; (80007e4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80007aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007ac:	e002      	b.n	80007b4 <LoopCopyDataInit>

080007ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007b2:	3304      	adds	r3, #4

080007b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007b8:	d3f9      	bcc.n	80007ae <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007ba:	4a0b      	ldr	r2, [pc, #44]	; (80007e8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80007bc:	4c0b      	ldr	r4, [pc, #44]	; (80007ec <LoopFillZerobss+0x26>)
  movs r3, #0
 80007be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007c0:	e001      	b.n	80007c6 <LoopFillZerobss>

080007c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007c4:	3204      	adds	r2, #4

080007c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007c8:	d3fb      	bcc.n	80007c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80007ca:	f7ff ffd7 	bl	800077c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80007ce:	f000 f811 	bl	80007f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80007d2:	f7ff ff6f 	bl	80006b4 <main>
  bx  lr    
 80007d6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80007d8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80007dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007e0:	20000034 	.word	0x20000034
  ldr r2, =_sidata
 80007e4:	0800085c 	.word	0x0800085c
  ldr r2, =_sbss
 80007e8:	20000034 	.word	0x20000034
  ldr r4, =_ebss
 80007ec:	20000054 	.word	0x20000054

080007f0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80007f0:	e7fe      	b.n	80007f0 <ADC_IRQHandler>
	...

080007f4 <__libc_init_array>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	4d0d      	ldr	r5, [pc, #52]	; (800082c <__libc_init_array+0x38>)
 80007f8:	4c0d      	ldr	r4, [pc, #52]	; (8000830 <__libc_init_array+0x3c>)
 80007fa:	1b64      	subs	r4, r4, r5
 80007fc:	10a4      	asrs	r4, r4, #2
 80007fe:	2600      	movs	r6, #0
 8000800:	42a6      	cmp	r6, r4
 8000802:	d109      	bne.n	8000818 <__libc_init_array+0x24>
 8000804:	4d0b      	ldr	r5, [pc, #44]	; (8000834 <__libc_init_array+0x40>)
 8000806:	4c0c      	ldr	r4, [pc, #48]	; (8000838 <__libc_init_array+0x44>)
 8000808:	f000 f818 	bl	800083c <_init>
 800080c:	1b64      	subs	r4, r4, r5
 800080e:	10a4      	asrs	r4, r4, #2
 8000810:	2600      	movs	r6, #0
 8000812:	42a6      	cmp	r6, r4
 8000814:	d105      	bne.n	8000822 <__libc_init_array+0x2e>
 8000816:	bd70      	pop	{r4, r5, r6, pc}
 8000818:	f855 3b04 	ldr.w	r3, [r5], #4
 800081c:	4798      	blx	r3
 800081e:	3601      	adds	r6, #1
 8000820:	e7ee      	b.n	8000800 <__libc_init_array+0xc>
 8000822:	f855 3b04 	ldr.w	r3, [r5], #4
 8000826:	4798      	blx	r3
 8000828:	3601      	adds	r6, #1
 800082a:	e7f2      	b.n	8000812 <__libc_init_array+0x1e>
 800082c:	08000854 	.word	0x08000854
 8000830:	08000854 	.word	0x08000854
 8000834:	08000854 	.word	0x08000854
 8000838:	08000858 	.word	0x08000858

0800083c <_init>:
 800083c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800083e:	bf00      	nop
 8000840:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000842:	bc08      	pop	{r3}
 8000844:	469e      	mov	lr, r3
 8000846:	4770      	bx	lr

08000848 <_fini>:
 8000848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084a:	bf00      	nop
 800084c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800084e:	bc08      	pop	{r3}
 8000850:	469e      	mov	lr, r3
 8000852:	4770      	bx	lr
