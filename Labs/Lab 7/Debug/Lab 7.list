
Lab 7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004c8  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800065c  0800065c  00020028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800065c  0800065c  00020028  2**0
                  CONTENTS
  4 .ARM          00000000  0800065c  0800065c  00020028  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800065c  0800065c  00020028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800065c  0800065c  0001065c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000660  08000660  00010660  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000028  20000000  08000664  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000028  0800068c  00020028  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  0800068c  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020028  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b45  00000000  00000000  00020058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000459  00000000  00000000  00020b9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00020ff8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000d8  00000000  00000000  00021148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000df49  00000000  00000000  00021220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011fe  00000000  00000000  0002f169  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fda3  00000000  00000000  00030367  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0008010a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002fc  00000000  00000000  00080160  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000028 	.word	0x20000028
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000644 	.word	0x08000644

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000002c 	.word	0x2000002c
 80001d0:	08000644 	.word	0x08000644

080001d4 <EXTI_ClearFlag>:
#include "EXTI.h"

void EXTI_ClearFlag(unsigned char PinNum){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
	EXTI_PR |= (0x01 << PinNum);
 80001de:	4b08      	ldr	r3, [pc, #32]	; (8000200 <EXTI_ClearFlag+0x2c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	4611      	mov	r1, r2
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <EXTI_ClearFlag+0x2c>)
 80001ee:	430b      	orrs	r3, r1
 80001f0:	6013      	str	r3, [r2, #0]
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	40013c14 	.word	0x40013c14

08000204 <EXTI_UnmaskInterrupt>:

void EXTI_UnmaskInterrupt(unsigned char PinNum){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
	EXTI_IMR |= (0x01 << PinNum);
 800020e:	4b08      	ldr	r3, [pc, #32]	; (8000230 <EXTI_UnmaskInterrupt+0x2c>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	79fa      	ldrb	r2, [r7, #7]
 8000214:	2101      	movs	r1, #1
 8000216:	fa01 f202 	lsl.w	r2, r1, r2
 800021a:	4611      	mov	r1, r2
 800021c:	4a04      	ldr	r2, [pc, #16]	; (8000230 <EXTI_UnmaskInterrupt+0x2c>)
 800021e:	430b      	orrs	r3, r1
 8000220:	6013      	str	r3, [r2, #0]
}
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	40013c00 	.word	0x40013c00

08000234 <EXTI_FallingTrigger>:

void EXTI_FallingTrigger(unsigned char PinNum){
 8000234:	b480      	push	{r7}
 8000236:	b083      	sub	sp, #12
 8000238:	af00      	add	r7, sp, #0
 800023a:	4603      	mov	r3, r0
 800023c:	71fb      	strb	r3, [r7, #7]
	EXTI_FTSR |= (0x01 << PinNum);
 800023e:	4b08      	ldr	r3, [pc, #32]	; (8000260 <EXTI_FallingTrigger+0x2c>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	2101      	movs	r1, #1
 8000246:	fa01 f202 	lsl.w	r2, r1, r2
 800024a:	4611      	mov	r1, r2
 800024c:	4a04      	ldr	r2, [pc, #16]	; (8000260 <EXTI_FallingTrigger+0x2c>)
 800024e:	430b      	orrs	r3, r1
 8000250:	6013      	str	r3, [r2, #0]
}
 8000252:	bf00      	nop
 8000254:	370c      	adds	r7, #12
 8000256:	46bd      	mov	sp, r7
 8000258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	40013c0c 	.word	0x40013c0c

08000264 <GPIO_Init>:

unsigned int *GPIO_RegisterTable[2][5] = {{GPIOAMODER, GPIOAOTYPER, GPIOAPUPDR, GPIOAIDR, GPIOAODR}, {GPIOBMODER, GPIOBOTYPER, GPIOBPUPDR, GPIOBIDR, GPIOBODR}};

void GPIO_Init(unsigned char PortId, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState)
{
 8000264:	b490      	push	{r4, r7}
 8000266:	b082      	sub	sp, #8
 8000268:	af00      	add	r7, sp, #0
 800026a:	4604      	mov	r4, r0
 800026c:	4608      	mov	r0, r1
 800026e:	4611      	mov	r1, r2
 8000270:	461a      	mov	r2, r3
 8000272:	4623      	mov	r3, r4
 8000274:	71fb      	strb	r3, [r7, #7]
 8000276:	4603      	mov	r3, r0
 8000278:	71bb      	strb	r3, [r7, #6]
 800027a:	460b      	mov	r3, r1
 800027c:	717b      	strb	r3, [r7, #5]
 800027e:	4613      	mov	r3, r2
 8000280:	713b      	strb	r3, [r7, #4]
  *GPIO_RegisterTable[PortId][0] &= ~(0x03 << 2 * PinNum);
 8000282:	79fa      	ldrb	r2, [r7, #7]
 8000284:	4956      	ldr	r1, [pc, #344]	; (80003e0 <GPIO_Init+0x17c>)
 8000286:	4613      	mov	r3, r2
 8000288:	009b      	lsls	r3, r3, #2
 800028a:	4413      	add	r3, r2
 800028c:	009b      	lsls	r3, r3, #2
 800028e:	440b      	add	r3, r1
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	6819      	ldr	r1, [r3, #0]
 8000294:	79bb      	ldrb	r3, [r7, #6]
 8000296:	005b      	lsls	r3, r3, #1
 8000298:	2203      	movs	r2, #3
 800029a:	fa02 f303 	lsl.w	r3, r2, r3
 800029e:	43db      	mvns	r3, r3
 80002a0:	461c      	mov	r4, r3
 80002a2:	79fa      	ldrb	r2, [r7, #7]
 80002a4:	484e      	ldr	r0, [pc, #312]	; (80003e0 <GPIO_Init+0x17c>)
 80002a6:	4613      	mov	r3, r2
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	4413      	add	r3, r2
 80002ac:	009b      	lsls	r3, r3, #2
 80002ae:	4403      	add	r3, r0
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	ea01 0204 	and.w	r2, r1, r4
 80002b6:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][0] |= PinMode << 2 * PinNum;
 80002b8:	79fa      	ldrb	r2, [r7, #7]
 80002ba:	4949      	ldr	r1, [pc, #292]	; (80003e0 <GPIO_Init+0x17c>)
 80002bc:	4613      	mov	r3, r2
 80002be:	009b      	lsls	r3, r3, #2
 80002c0:	4413      	add	r3, r2
 80002c2:	009b      	lsls	r3, r3, #2
 80002c4:	440b      	add	r3, r1
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	6819      	ldr	r1, [r3, #0]
 80002ca:	797a      	ldrb	r2, [r7, #5]
 80002cc:	79bb      	ldrb	r3, [r7, #6]
 80002ce:	005b      	lsls	r3, r3, #1
 80002d0:	fa02 f303 	lsl.w	r3, r2, r3
 80002d4:	461c      	mov	r4, r3
 80002d6:	79fa      	ldrb	r2, [r7, #7]
 80002d8:	4841      	ldr	r0, [pc, #260]	; (80003e0 <GPIO_Init+0x17c>)
 80002da:	4613      	mov	r3, r2
 80002dc:	009b      	lsls	r3, r3, #2
 80002de:	4413      	add	r3, r2
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	4403      	add	r3, r0
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	ea41 0204 	orr.w	r2, r1, r4
 80002ea:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][1] &= ~(1 << PinNum);
 80002ec:	79fa      	ldrb	r2, [r7, #7]
 80002ee:	493c      	ldr	r1, [pc, #240]	; (80003e0 <GPIO_Init+0x17c>)
 80002f0:	4613      	mov	r3, r2
 80002f2:	009b      	lsls	r3, r3, #2
 80002f4:	4413      	add	r3, r2
 80002f6:	009b      	lsls	r3, r3, #2
 80002f8:	440b      	add	r3, r1
 80002fa:	3304      	adds	r3, #4
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	6819      	ldr	r1, [r3, #0]
 8000300:	79bb      	ldrb	r3, [r7, #6]
 8000302:	2201      	movs	r2, #1
 8000304:	fa02 f303 	lsl.w	r3, r2, r3
 8000308:	43db      	mvns	r3, r3
 800030a:	461c      	mov	r4, r3
 800030c:	79fa      	ldrb	r2, [r7, #7]
 800030e:	4834      	ldr	r0, [pc, #208]	; (80003e0 <GPIO_Init+0x17c>)
 8000310:	4613      	mov	r3, r2
 8000312:	009b      	lsls	r3, r3, #2
 8000314:	4413      	add	r3, r2
 8000316:	009b      	lsls	r3, r3, #2
 8000318:	4403      	add	r3, r0
 800031a:	3304      	adds	r3, #4
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	ea01 0204 	and.w	r2, r1, r4
 8000322:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 8000324:	79fa      	ldrb	r2, [r7, #7]
 8000326:	492e      	ldr	r1, [pc, #184]	; (80003e0 <GPIO_Init+0x17c>)
 8000328:	4613      	mov	r3, r2
 800032a:	009b      	lsls	r3, r3, #2
 800032c:	4413      	add	r3, r2
 800032e:	009b      	lsls	r3, r3, #2
 8000330:	440b      	add	r3, r1
 8000332:	3304      	adds	r3, #4
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	6819      	ldr	r1, [r3, #0]
 8000338:	793b      	ldrb	r3, [r7, #4]
 800033a:	f003 0201 	and.w	r2, r3, #1
 800033e:	79bb      	ldrb	r3, [r7, #6]
 8000340:	fa02 f303 	lsl.w	r3, r2, r3
 8000344:	461c      	mov	r4, r3
 8000346:	79fa      	ldrb	r2, [r7, #7]
 8000348:	4825      	ldr	r0, [pc, #148]	; (80003e0 <GPIO_Init+0x17c>)
 800034a:	4613      	mov	r3, r2
 800034c:	009b      	lsls	r3, r3, #2
 800034e:	4413      	add	r3, r2
 8000350:	009b      	lsls	r3, r3, #2
 8000352:	4403      	add	r3, r0
 8000354:	3304      	adds	r3, #4
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	ea41 0204 	orr.w	r2, r1, r4
 800035c:	601a      	str	r2, [r3, #0]

  *GPIO_RegisterTable[PortId][2] &= ~(0x03 << 2 * PinNum);
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	491f      	ldr	r1, [pc, #124]	; (80003e0 <GPIO_Init+0x17c>)
 8000362:	4613      	mov	r3, r2
 8000364:	009b      	lsls	r3, r3, #2
 8000366:	4413      	add	r3, r2
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	440b      	add	r3, r1
 800036c:	3308      	adds	r3, #8
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	6819      	ldr	r1, [r3, #0]
 8000372:	79bb      	ldrb	r3, [r7, #6]
 8000374:	005b      	lsls	r3, r3, #1
 8000376:	2203      	movs	r2, #3
 8000378:	fa02 f303 	lsl.w	r3, r2, r3
 800037c:	43db      	mvns	r3, r3
 800037e:	461c      	mov	r4, r3
 8000380:	79fa      	ldrb	r2, [r7, #7]
 8000382:	4817      	ldr	r0, [pc, #92]	; (80003e0 <GPIO_Init+0x17c>)
 8000384:	4613      	mov	r3, r2
 8000386:	009b      	lsls	r3, r3, #2
 8000388:	4413      	add	r3, r2
 800038a:	009b      	lsls	r3, r3, #2
 800038c:	4403      	add	r3, r0
 800038e:	3308      	adds	r3, #8
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	ea01 0204 	and.w	r2, r1, r4
 8000396:	601a      	str	r2, [r3, #0]
  *GPIO_RegisterTable[PortId][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 8000398:	79fa      	ldrb	r2, [r7, #7]
 800039a:	4911      	ldr	r1, [pc, #68]	; (80003e0 <GPIO_Init+0x17c>)
 800039c:	4613      	mov	r3, r2
 800039e:	009b      	lsls	r3, r3, #2
 80003a0:	4413      	add	r3, r2
 80003a2:	009b      	lsls	r3, r3, #2
 80003a4:	440b      	add	r3, r1
 80003a6:	3308      	adds	r3, #8
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	6819      	ldr	r1, [r3, #0]
 80003ac:	793b      	ldrb	r3, [r7, #4]
 80003ae:	105b      	asrs	r3, r3, #1
 80003b0:	f003 0203 	and.w	r2, r3, #3
 80003b4:	79bb      	ldrb	r3, [r7, #6]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
 80003bc:	461c      	mov	r4, r3
 80003be:	79fa      	ldrb	r2, [r7, #7]
 80003c0:	4807      	ldr	r0, [pc, #28]	; (80003e0 <GPIO_Init+0x17c>)
 80003c2:	4613      	mov	r3, r2
 80003c4:	009b      	lsls	r3, r3, #2
 80003c6:	4413      	add	r3, r2
 80003c8:	009b      	lsls	r3, r3, #2
 80003ca:	4403      	add	r3, r0
 80003cc:	3308      	adds	r3, #8
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	ea41 0204 	orr.w	r2, r1, r4
 80003d4:	601a      	str	r2, [r3, #0]
}
 80003d6:	bf00      	nop
 80003d8:	3708      	adds	r7, #8
 80003da:	46bd      	mov	sp, r7
 80003dc:	bc90      	pop	{r4, r7}
 80003de:	4770      	bx	lr
 80003e0:	20000000 	.word	0x20000000

080003e4 <GPIO_TogglePin>:
  }
  return result;
}

unsigned char GPIO_TogglePin(unsigned char PortId, unsigned char PinNum)
{
 80003e4:	b490      	push	{r4, r7}
 80003e6:	b084      	sub	sp, #16
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	4603      	mov	r3, r0
 80003ec:	460a      	mov	r2, r1
 80003ee:	71fb      	strb	r3, [r7, #7]
 80003f0:	4613      	mov	r3, r2
 80003f2:	71bb      	strb	r3, [r7, #6]
  unsigned char result;
  if (((*GPIO_RegisterTable[PortId][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1)
 80003f4:	79fa      	ldrb	r2, [r7, #7]
 80003f6:	491d      	ldr	r1, [pc, #116]	; (800046c <GPIO_TogglePin+0x88>)
 80003f8:	4613      	mov	r3, r2
 80003fa:	009b      	lsls	r3, r3, #2
 80003fc:	4413      	add	r3, r2
 80003fe:	009b      	lsls	r3, r3, #2
 8000400:	440b      	add	r3, r1
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	79ba      	ldrb	r2, [r7, #6]
 8000408:	0052      	lsls	r2, r2, #1
 800040a:	2103      	movs	r1, #3
 800040c:	fa01 f202 	lsl.w	r2, r1, r2
 8000410:	401a      	ands	r2, r3
 8000412:	79bb      	ldrb	r3, [r7, #6]
 8000414:	005b      	lsls	r3, r3, #1
 8000416:	fa22 f303 	lsr.w	r3, r2, r3
 800041a:	2b01      	cmp	r3, #1
 800041c:	d11d      	bne.n	800045a <GPIO_TogglePin+0x76>
  {
    *GPIO_RegisterTable[PortId][4] ^= (1 << PinNum);
 800041e:	79fa      	ldrb	r2, [r7, #7]
 8000420:	4912      	ldr	r1, [pc, #72]	; (800046c <GPIO_TogglePin+0x88>)
 8000422:	4613      	mov	r3, r2
 8000424:	009b      	lsls	r3, r3, #2
 8000426:	4413      	add	r3, r2
 8000428:	009b      	lsls	r3, r3, #2
 800042a:	440b      	add	r3, r1
 800042c:	3310      	adds	r3, #16
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	6819      	ldr	r1, [r3, #0]
 8000432:	79bb      	ldrb	r3, [r7, #6]
 8000434:	2201      	movs	r2, #1
 8000436:	fa02 f303 	lsl.w	r3, r2, r3
 800043a:	461c      	mov	r4, r3
 800043c:	79fa      	ldrb	r2, [r7, #7]
 800043e:	480b      	ldr	r0, [pc, #44]	; (800046c <GPIO_TogglePin+0x88>)
 8000440:	4613      	mov	r3, r2
 8000442:	009b      	lsls	r3, r3, #2
 8000444:	4413      	add	r3, r2
 8000446:	009b      	lsls	r3, r3, #2
 8000448:	4403      	add	r3, r0
 800044a:	3310      	adds	r3, #16
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	ea81 0204 	eor.w	r2, r1, r4
 8000452:	601a      	str	r2, [r3, #0]
    result = OK;
 8000454:	2300      	movs	r3, #0
 8000456:	73fb      	strb	r3, [r7, #15]
 8000458:	e001      	b.n	800045e <GPIO_TogglePin+0x7a>
  }
  else
  {
    result = NOK;
 800045a:	2301      	movs	r3, #1
 800045c:	73fb      	strb	r3, [r7, #15]
  }
  return result;
 800045e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000460:	4618      	mov	r0, r3
 8000462:	3710      	adds	r7, #16
 8000464:	46bd      	mov	sp, r7
 8000466:	bc90      	pop	{r4, r7}
 8000468:	4770      	bx	lr
 800046a:	bf00      	nop
 800046c:	20000000 	.word	0x20000000

08000470 <NVIC_EnableExternal>:
#include "NVIC.h"

void NVIC_EnableExternal(unsigned char InterruptLine){
 8000470:	b480      	push	{r7}
 8000472:	b083      	sub	sp, #12
 8000474:	af00      	add	r7, sp, #0
 8000476:	4603      	mov	r3, r0
 8000478:	71fb      	strb	r3, [r7, #7]
	NVIC_ISER0 |= ((0x01<<InterruptLine) << 6);
 800047a:	4b08      	ldr	r3, [pc, #32]	; (800049c <NVIC_EnableExternal+0x2c>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	79fa      	ldrb	r2, [r7, #7]
 8000480:	2101      	movs	r1, #1
 8000482:	fa01 f202 	lsl.w	r2, r1, r2
 8000486:	0192      	lsls	r2, r2, #6
 8000488:	4611      	mov	r1, r2
 800048a:	4a04      	ldr	r2, [pc, #16]	; (800049c <NVIC_EnableExternal+0x2c>)
 800048c:	430b      	orrs	r3, r1
 800048e:	6013      	str	r3, [r2, #0]
}
 8000490:	bf00      	nop
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr
 800049c:	e000e100 	.word	0xe000e100

080004a0 <RCC_EnableGPIO>:
#include "RCC.h"

void RCC_EnableGPIO(unsigned char PortId){
 80004a0:	b480      	push	{r7}
 80004a2:	b083      	sub	sp, #12
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	4603      	mov	r3, r0
 80004a8:	71fb      	strb	r3, [r7, #7]
    RCC_AHB1ENR |= (0x01 << PortId);
 80004aa:	4b08      	ldr	r3, [pc, #32]	; (80004cc <RCC_EnableGPIO+0x2c>)
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	79fa      	ldrb	r2, [r7, #7]
 80004b0:	2101      	movs	r1, #1
 80004b2:	fa01 f202 	lsl.w	r2, r1, r2
 80004b6:	4611      	mov	r1, r2
 80004b8:	4a04      	ldr	r2, [pc, #16]	; (80004cc <RCC_EnableGPIO+0x2c>)
 80004ba:	430b      	orrs	r3, r1
 80004bc:	6013      	str	r3, [r2, #0]
}
 80004be:	bf00      	nop
 80004c0:	370c      	adds	r7, #12
 80004c2:	46bd      	mov	sp, r7
 80004c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c8:	4770      	bx	lr
 80004ca:	bf00      	nop
 80004cc:	40023830 	.word	0x40023830

080004d0 <RCC_EnableSYSCFG>:

void RCC_EnableSYSCFG(){
 80004d0:	b480      	push	{r7}
 80004d2:	af00      	add	r7, sp, #0
	RCC_APB2ENR |= (0x01 << 14);
 80004d4:	4b05      	ldr	r3, [pc, #20]	; (80004ec <RCC_EnableSYSCFG+0x1c>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	4a04      	ldr	r2, [pc, #16]	; (80004ec <RCC_EnableSYSCFG+0x1c>)
 80004da:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004de:	6013      	str	r3, [r2, #0]
}
 80004e0:	bf00      	nop
 80004e2:	46bd      	mov	sp, r7
 80004e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e8:	4770      	bx	lr
 80004ea:	bf00      	nop
 80004ec:	40023844 	.word	0x40023844

080004f0 <SYSCFG_ExternalPort>:
#include "SYSCFG.h"

void SYSCFG_ExternalPort(unsigned char PortNum, unsigned char PinNum){
 80004f0:	b480      	push	{r7}
 80004f2:	b083      	sub	sp, #12
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	4603      	mov	r3, r0
 80004f8:	460a      	mov	r2, r1
 80004fa:	71fb      	strb	r3, [r7, #7]
 80004fc:	4613      	mov	r3, r2
 80004fe:	71bb      	strb	r3, [r7, #6]
	SYSCFG_EXTICR1 &= ~((0x0f-PortNum) << 4*PinNum);
 8000500:	4b09      	ldr	r3, [pc, #36]	; (8000528 <SYSCFG_ExternalPort+0x38>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	79fa      	ldrb	r2, [r7, #7]
 8000506:	f1c2 010f 	rsb	r1, r2, #15
 800050a:	79ba      	ldrb	r2, [r7, #6]
 800050c:	0092      	lsls	r2, r2, #2
 800050e:	fa01 f202 	lsl.w	r2, r1, r2
 8000512:	43d2      	mvns	r2, r2
 8000514:	4611      	mov	r1, r2
 8000516:	4a04      	ldr	r2, [pc, #16]	; (8000528 <SYSCFG_ExternalPort+0x38>)
 8000518:	400b      	ands	r3, r1
 800051a:	6013      	str	r3, [r2, #0]
}
 800051c:	bf00      	nop
 800051e:	370c      	adds	r7, #12
 8000520:	46bd      	mov	sp, r7
 8000522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000526:	4770      	bx	lr
 8000528:	40013808 	.word	0x40013808

0800052c <ISR_LED>:
#include "EXTI.h"
#include "NVIC.h"
#include "SYSCFG.h"

void ISR_LED(void)
{
 800052c:	b580      	push	{r7, lr}
 800052e:	af00      	add	r7, sp, #0
    GPIO_TogglePin(0,1);
 8000530:	2101      	movs	r1, #1
 8000532:	2000      	movs	r0, #0
 8000534:	f7ff ff56 	bl	80003e4 <GPIO_TogglePin>
    EXTI_ClearFlag(0);
 8000538:	2000      	movs	r0, #0
 800053a:	f7ff fe4b 	bl	80001d4 <EXTI_ClearFlag>
}
 800053e:	bf00      	nop
 8000540:	bd80      	pop	{r7, pc}

08000542 <main>:
int main(void)
{
 8000542:	b580      	push	{r7, lr}
 8000544:	af00      	add	r7, sp, #0

    RCC_EnableGPIO(0);
 8000546:	2000      	movs	r0, #0
 8000548:	f7ff ffaa 	bl	80004a0 <RCC_EnableGPIO>
    RCC_EnableSYSCFG();
 800054c:	f7ff ffc0 	bl	80004d0 <RCC_EnableSYSCFG>

    GPIO_Init(0, 0, INPUT, PULL_UP);
 8000550:	2302      	movs	r3, #2
 8000552:	2200      	movs	r2, #0
 8000554:	2100      	movs	r1, #0
 8000556:	2000      	movs	r0, #0
 8000558:	f7ff fe84 	bl	8000264 <GPIO_Init>
    GPIO_Init(0, 1, OUTPUT, PUSH_PULL);
 800055c:	2300      	movs	r3, #0
 800055e:	2201      	movs	r2, #1
 8000560:	2101      	movs	r1, #1
 8000562:	2000      	movs	r0, #0
 8000564:	f7ff fe7e 	bl	8000264 <GPIO_Init>

    SYSCFG_ExternalPort(0,0);
 8000568:	2100      	movs	r1, #0
 800056a:	2000      	movs	r0, #0
 800056c:	f7ff ffc0 	bl	80004f0 <SYSCFG_ExternalPort>

    EXTI_UnmaskInterrupt(0);
 8000570:	2000      	movs	r0, #0
 8000572:	f7ff fe47 	bl	8000204 <EXTI_UnmaskInterrupt>
    EXTI_FallingTrigger(0);
 8000576:	2000      	movs	r0, #0
 8000578:	f7ff fe5c 	bl	8000234 <EXTI_FallingTrigger>

    NVIC_EnableExternal(0);
 800057c:	2000      	movs	r0, #0
 800057e:	f7ff ff77 	bl	8000470 <NVIC_EnableExternal>

    while (1)
 8000582:	e7fe      	b.n	8000582 <main+0x40>

08000584 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000584:	b480      	push	{r7}
 8000586:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000588:	4b06      	ldr	r3, [pc, #24]	; (80005a4 <SystemInit+0x20>)
 800058a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800058e:	4a05      	ldr	r2, [pc, #20]	; (80005a4 <SystemInit+0x20>)
 8000590:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000594:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000598:	bf00      	nop
 800059a:	46bd      	mov	sp, r7
 800059c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop
 80005a4:	e000ed00 	.word	0xe000ed00

080005a8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80005a8:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005e0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80005ac:	480d      	ldr	r0, [pc, #52]	; (80005e4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80005ae:	490e      	ldr	r1, [pc, #56]	; (80005e8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80005b0:	4a0e      	ldr	r2, [pc, #56]	; (80005ec <LoopFillZerobss+0x1e>)
  movs r3, #0
 80005b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005b4:	e002      	b.n	80005bc <LoopCopyDataInit>

080005b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ba:	3304      	adds	r3, #4

080005bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005c0:	d3f9      	bcc.n	80005b6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005c2:	4a0b      	ldr	r2, [pc, #44]	; (80005f0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80005c4:	4c0b      	ldr	r4, [pc, #44]	; (80005f4 <LoopFillZerobss+0x26>)
  movs r3, #0
 80005c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005c8:	e001      	b.n	80005ce <LoopFillZerobss>

080005ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005cc:	3204      	adds	r2, #4

080005ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005d0:	d3fb      	bcc.n	80005ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005d2:	f7ff ffd7 	bl	8000584 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d6:	f000 f811 	bl	80005fc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005da:	f7ff ffb2 	bl	8000542 <main>
  bx  lr    
 80005de:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80005e0:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005e8:	20000028 	.word	0x20000028
  ldr r2, =_sidata
 80005ec:	08000664 	.word	0x08000664
  ldr r2, =_sbss
 80005f0:	20000028 	.word	0x20000028
  ldr r4, =_ebss
 80005f4:	20000044 	.word	0x20000044

080005f8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f8:	e7fe      	b.n	80005f8 <ADC_IRQHandler>
	...

080005fc <__libc_init_array>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	4d0d      	ldr	r5, [pc, #52]	; (8000634 <__libc_init_array+0x38>)
 8000600:	4c0d      	ldr	r4, [pc, #52]	; (8000638 <__libc_init_array+0x3c>)
 8000602:	1b64      	subs	r4, r4, r5
 8000604:	10a4      	asrs	r4, r4, #2
 8000606:	2600      	movs	r6, #0
 8000608:	42a6      	cmp	r6, r4
 800060a:	d109      	bne.n	8000620 <__libc_init_array+0x24>
 800060c:	4d0b      	ldr	r5, [pc, #44]	; (800063c <__libc_init_array+0x40>)
 800060e:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <__libc_init_array+0x44>)
 8000610:	f000 f818 	bl	8000644 <_init>
 8000614:	1b64      	subs	r4, r4, r5
 8000616:	10a4      	asrs	r4, r4, #2
 8000618:	2600      	movs	r6, #0
 800061a:	42a6      	cmp	r6, r4
 800061c:	d105      	bne.n	800062a <__libc_init_array+0x2e>
 800061e:	bd70      	pop	{r4, r5, r6, pc}
 8000620:	f855 3b04 	ldr.w	r3, [r5], #4
 8000624:	4798      	blx	r3
 8000626:	3601      	adds	r6, #1
 8000628:	e7ee      	b.n	8000608 <__libc_init_array+0xc>
 800062a:	f855 3b04 	ldr.w	r3, [r5], #4
 800062e:	4798      	blx	r3
 8000630:	3601      	adds	r6, #1
 8000632:	e7f2      	b.n	800061a <__libc_init_array+0x1e>
 8000634:	0800065c 	.word	0x0800065c
 8000638:	0800065c 	.word	0x0800065c
 800063c:	0800065c 	.word	0x0800065c
 8000640:	08000660 	.word	0x08000660

08000644 <_init>:
 8000644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000646:	bf00      	nop
 8000648:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800064a:	bc08      	pop	{r3}
 800064c:	469e      	mov	lr, r3
 800064e:	4770      	bx	lr

08000650 <_fini>:
 8000650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000652:	bf00      	nop
 8000654:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000656:	bc08      	pop	{r3}
 8000658:	469e      	mov	lr, r3
 800065a:	4770      	bx	lr
